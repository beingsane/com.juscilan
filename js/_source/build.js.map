{"version":3,"sources":["webpack:///build.js","webpack:///webpack/bootstrap 7f948d8eb029091524e1","webpack:///./src/main.js","webpack:///./~/babel-runtime/core-js/json/stringify.js","webpack:///./src/components/jm-9-scrool.js","webpack:///jm-1-nav.vue","webpack:///jm-2-top-banner.vue","webpack:///jm-3-colluns.vue","webpack:///jm-4-mid-banner.vue","webpack:///jm-5-contact.vue","webpack:///jm-6-foot-banner.vue","webpack:///jm-7-footer.vue","webpack:///jm-8-modal.vue","webpack:///./src/components/jm-1-nav.vue?cabc","webpack:///./src/components/jm-2-top-banner.vue?6a71","webpack:///./src/components/jm-3-colluns.vue?4e64","webpack:///./src/components/jm-4-mid-banner.vue?2fba","webpack:///./src/components/jm-5-contact.vue?512a","webpack:///./src/components/jm-6-foot-banner.vue?70b9","webpack:///./src/components/jm-7-footer.vue?e241","webpack:///./src/components/jm-8-modal.vue?fffb","webpack:///./src/components/jm-1-nav.vue","webpack:///./src/components/jm-2-top-banner.vue","webpack:///./src/components/jm-3-colluns.vue","webpack:///./src/components/jm-4-mid-banner.vue","webpack:///./src/components/jm-5-contact.vue","webpack:///./src/components/jm-6-foot-banner.vue","webpack:///./src/components/jm-7-footer.vue","webpack:///./src/components/jm-8-modal.vue","webpack:///./~/core-js/library/fn/json/stringify.js","webpack:///./~/core-js/library/modules/_core.js","webpack:///./~/vue-resource/dist/vue-resource.common.js","webpack:///./~/vue/dist/vue.common.js","webpack:///./~/vuex/dist/vuex.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","mutations","state","undefined","_vue","_vue2","_vueResource","_vueResource2","_vuex","_vuex2","_jm1Nav","_jm1Nav2","_jm2TopBanner","_jm2TopBanner2","_jm3Colluns","_jm3Colluns2","_jm4MidBanner","_jm4MidBanner2","_jm5Contact","_jm5Contact2","_jm6FootBanner","_jm6FootBanner2","_jm7Footer","_jm7Footer2","_jm8Modal","_jm8Modal2","use","Modal","ATUALIZA_MODAL","OK_CLICK","console","table","tipo","senha","address","window","location","el","components","JmNav","JmTopBanner","JmColluns","JmMidBanner","JmContact","JmFootBanner","JmFooter","store","Store","strict","scroll","element","doc","jQuery","click","animate","scrollTop","attr","this","offset","top","_stringify","_stringify2","_jm9Scrool","vuex","actions","executa","_ref","dispatch","data","JSON","parse","$data","openModal","getters","getValue","titulo","mensagem","inputvisible","ready","methods","baixar","msg","dados","name","email","enviar","event","_this","preventDefault","config","headers","Content-Type","$http","post","then","response","counter","ok","closeModal","__vue_script__","__vue_template__","options","template","core","$JSON","stringify","it","apply","arguments","version","__e","Promise$2","executor","PENDING","deferred","promise","x","resolve","r","reject","e","Promise$1","context","PromiseObj","bind","Util","Vue","util","debug","silent","warn","error","nextTick","cb","ctx","trim","str","replace","isString","val","isBoolean","isFunction","isObject","isPlainObject","getPrototypeOf","prototype","isFormData","FormData","when","fulfilled","rejected","length","fn","opts","merge","$vm","$options","each","iterator","i","key","hasOwnProperty","target","args","array","slice","forEach","source","_merge","defaults","_assign","deep","isArray","root","next","url","match","query","urlParams","keys","Url","params","indexOf","expand","variables","tmpl","expanded","push","vars","operators","_","expression","literal","operator","values","charAt","substr","split","variable","tmp","exec","getValues","separator","join","encodeReserved","modifier","result","isDefined","toString","substring","parseInt","encodeValue","isKeyOperator","Array","filter","k","encodeURIComponent","map","part","test","encodeURI","transform","self","transforms","handler","factory","vm","serialize","scope","hash","plain","add","xdrClient","request","xdr","XDomainRequest","respondWith","responseText","status","statusText","abort","open","method","getUrl","timeout","onload","onerror","ontimeout","onprogress","send","getBody","cors","crossOrigin","SUPPORTS_CORS","client","emulateHTTP","requestUrl","protocol","ORIGIN_URL","host","body","emulateJSON","contentType","json","text","jsonpClient","script","jsonp","callback","Math","random","type","document","removeChild","createElement","src","async","appendChild","before","header","toUpperCase","assign","Http","common","custom","toLowerCase","setTimeout","clearTimeout","xhrClient","xhr","XMLHttpRequest","parseHeaders","getAllResponseHeaders","progress","addEventListener","upload","credentials","withCredentials","setRequestHeader","row","Client","reqHandlers","pop","resHandlers","unshift","sendRequest","interceptors","Request","Error","Resource","resource","action","plugin","installed","http","Promise","defineProperties","$url","get","$resource","$promise","RESOLVED","REJECTED","all","iterable","resolver","count","race","p$1","TypeError","called","notify","reason","shift","onResolved","onRejected","ie","documentMode","escape","href","port","hostname","pathname","search","classCallCheck","instance","Constructor","Response","blob","Blob","CUSTOM_HEADERS","X-Requested-With","COMMON_HEADERS","Accept","JSON_CONTENT_TYPE","put","patch","delete","save","update","remove","global","set","hasOwn","_isVue","_data","ob","__ob__","convert","dep","vms","_proxy","_digest","del","_unproxy","isLiteral","exp","literalValueRE","isReserved","charCodeAt","_toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","a","b","camelize","camelizeRE","toUpper","hyphenate","hyphenateRE","classify","classifyRE","l","toArray","list","start","ret","extend","to","from","OBJECT_STRING","def","enumerable","writable","configurable","_debounce","func","wait","timestamp","later","last","Date","now","arr","cancellable","cancelled","cancel","looseEqual","Cache","limit","size","head","tail","_keymap","create","pushFilter","lastFilterIndex","tokens","filterTokenRE","processFilterArg","dir","filters","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","inSingle","inDouble","curly","square","paren","prev","escapeRegex","regexEscapeRE","compileRegex","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","index","html","first","oneTime","lastIndex","tag","tokensToExp","token","formatToken","single","$eval","inlineFilters","filterRE","appendWithTransition","applyTransition","beforeWithTransition","removeWithTransition","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","querySelector","inDoc","node","ownerDocument","documentElement","parent","parentNode","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","prepend","firstChild","replaceChild","on","useCapture","off","removeEventListener","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","setAttribute","addClass","classList","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","isTrimmable","lastChild","tagName","createAnchor","persist","anchor","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","ids","guardProps","props","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","mixin","mixinOptions","warnMissing","camelizedId","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","newVal","initMixin","_init","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","constructor","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","path","trimmed","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","$set","noop","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","needSet","expressionCache","isSimplePath","pathTestRE","literalValueRE$1","resetBatcherState","queue","userQueue","has","circular","waiting","flushBatcherQueue","_again","runBatcherQueue","devtools","emit","watcher","run","pushWatcher","q","user","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","twoWay","queued","shallow","traverse","seen","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","commentMatch","commentRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","getElementById","Fragment","linker","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","callHook","attach","shouldCallRemove","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","floor","getTrackByKey","trackByKey","multi","init","selected","_value","indexOf$1","keyFilter","codes","charCode","keyCodes","concat","keyCode","stopFilter","stopPropagation","preventFilter","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","style","kebab","camelPrefixes","normalize$1","_key","callActivateHooks","total","compileProps","propOptions","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","inlineProps","propsData","initProp","$get","_bindDir","propDef","Boolean","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","required","valid","expectedTypes","assertedType","assertType","expectedType","validator","coerce","String","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileTextNode","compileElement","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","component","ref","internalDirectives","modifiers","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","j","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","parseModifiers","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","transitionRE","bindRE","onRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","oldData","removeVm","computed","userDef","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","handlers","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","hook","$emit","noop$1","Directive","_locked","_bound","_listeners","_host","lifecycleMixin","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$remove","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","read","_resolveComponent","resolved","requested","pendingCallbacks","cbs","dataAPI","clean","asStatement","$arguments","$delete","$watch","sync","immediate","filterRE$1","$interpolate","$log","log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","hookRE","$once","splice","isSource","shouldPropagate","hasParentCbs","some","$broadcast","$dispatch","lifecycleAPI","$compile","limitBy","filterBy","delimiter","convertArray","item","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","install","definition","inBrowser","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isIE","isAndroid","isIos","iosVersionMatch","iosVersion","hasMutationObserverBug","indexedDB","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","setImmediate","observer","textNode","characterData","Set","entry","newer","older","returnEntry","freeze","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","inMatch","itMatch","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","afterBind","radio","checked","select","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","cssText","handleObject","reduce","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","attrValue","modelProp","setAttributeNS","cloak","for","if","vClass","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","indent","capitalize","uppercase","lowercase","currency","_currency","decimals","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","mergeObjects","existing","_typeof","getNestedState","nestedKeys","getWatcher","getDep","devtoolPlugin","targetState","replaceState","subscribe","mutation","override","vuexInit","$store","defineVuexGetter","makeBoundAction","_getterCacheId","_vm","computedGetter","_len","_key2","usesInit","_lifecycleHooks","beforeCreate","_Vue","Symbol","protoProps","staticProps","toConsumableArray","arr2","_ref$state","_ref$mutations","_ref$modules","_ref$plugins","plugins","_ref$strict","_dispatching","_rootMutations","_mutations","_modules","_subscribers","_setupModuleState","_setupModuleMutations","_setupMutationCheck","_this2","_len2","payload","isObjectStyleDispatch","h","_this3","_ref2","_this4","updatedModules","updatedMutations","_createModuleMutations","_this5","newNestedKeys","nestedMutations","_len3","_key3","_this6","v"],"mappings":"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","file":"build.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/js/_source\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.mutations = exports.state = undefined;\n\t\n\tvar _vue = __webpack_require__(30);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _vueResource = __webpack_require__(29);\n\t\n\tvar _vueResource2 = _interopRequireDefault(_vueResource);\n\t\n\tvar _vuex = __webpack_require__(31);\n\t\n\tvar _vuex2 = _interopRequireDefault(_vuex);\n\t\n\tvar _jm1Nav = __webpack_require__(19);\n\t\n\tvar _jm1Nav2 = _interopRequireDefault(_jm1Nav);\n\t\n\tvar _jm2TopBanner = __webpack_require__(20);\n\t\n\tvar _jm2TopBanner2 = _interopRequireDefault(_jm2TopBanner);\n\t\n\tvar _jm3Colluns = __webpack_require__(21);\n\t\n\tvar _jm3Colluns2 = _interopRequireDefault(_jm3Colluns);\n\t\n\tvar _jm4MidBanner = __webpack_require__(22);\n\t\n\tvar _jm4MidBanner2 = _interopRequireDefault(_jm4MidBanner);\n\t\n\tvar _jm5Contact = __webpack_require__(23);\n\t\n\tvar _jm5Contact2 = _interopRequireDefault(_jm5Contact);\n\t\n\tvar _jm6FootBanner = __webpack_require__(24);\n\t\n\tvar _jm6FootBanner2 = _interopRequireDefault(_jm6FootBanner);\n\t\n\tvar _jm7Footer = __webpack_require__(25);\n\t\n\tvar _jm7Footer2 = _interopRequireDefault(_jm7Footer);\n\t\n\tvar _jm8Modal = __webpack_require__(26);\n\t\n\tvar _jm8Modal2 = _interopRequireDefault(_jm8Modal);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.use(_vueResource2.default);\n\t_vue2.default.use(_vuex2.default);\n\t\n\tvar state = exports.state = {\n\t\n\t    Modal: {}\n\t};\n\t\n\tvar mutations = exports.mutations = {\n\t    ATUALIZA_MODAL: function ATUALIZA_MODAL(state, obj) {\n\t        state.Modal = obj;\n\t    },\n\t    OK_CLICK: function OK_CLICK(state, obj) {\n\t        console.table(obj);\n\t        if (obj.tipo === 'DOWNLOAD') {\n\t\n\t            if (!obj.senha) return;\n\t\n\t            var address = \"/arquivos/Juscilan_Moreto-11-98167-1595.pdf/\" + obj.senha;\n\t\n\t            window.location = address;\n\t        }\n\t    }\n\t};\n\t\n\tnew _vue2.default({\n\t    el: 'body',\n\t    components: {\n\t        JmNav: _jm1Nav2.default,\n\t        JmTopBanner: _jm2TopBanner2.default,\n\t        JmColluns: _jm3Colluns2.default,\n\t        JmMidBanner: _jm4MidBanner2.default,\n\t        JmContact: _jm5Contact2.default,\n\t        JmFootBanner: _jm6FootBanner2.default,\n\t        JmFooter: _jm7Footer2.default,\n\t        Modal: _jm8Modal2.default\n\t    },\n\t\n\t    store: new _vuex2.default.Store({\n\t        state: state,\n\t        mutations: mutations,\n\t        strict: true })\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(27), __esModule: true };\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tvar scroll = exports.scroll = function scroll(element) {\n\t    var doc = jQuery('html, body');\n\t    jQuery('.' + element).click(function () {\n\t        doc.animate({\n\t            scrollTop: jQuery(jQuery.attr(this, 'href')).offset().top\n\t        }, 1000);\n\t        return false;\n\t    });\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _stringify = __webpack_require__(1);\n\t\n\tvar _stringify2 = _interopRequireDefault(_stringify);\n\t\n\tvar _jm9Scrool = __webpack_require__(2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t\n\t  vuex: {\n\t    actions: {\n\t\n\t      executa: function executa(_ref) {\n\t        var dispatch = _ref.dispatch;\n\t\n\t        var data = JSON.parse((0, _stringify2.default)(this.$data));\n\t        dispatch('ATUALIZA_MODAL', data);\n\t        jQuery('#modal1').openModal();\n\t      }\n\t    },\n\t    getters: {\n\t      getValue: function getValue(store) {\n\t        return store.Modal;\n\t      }\n\t\n\t    }\n\t\n\t  },\n\t\n\t  data: function data() {\n\t    return {\n\t      titulo: 'Atenção',\n\t      mensagem: 'Por gentileza digite sua senha:',\n\t      tipo: 'DOWNLOAD',\n\t      inputvisible: true\n\t    };\n\t  },\n\t  ready: function ready() {\n\t    (0, _jm9Scrool.scroll)(\"scrollSuave\");\n\t  },\n\t\n\t  methods: {\n\t    baixar: function baixar() {\n\t      jQuery('#modal1').openModal();\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      msg: ''\n\t    };\n\t  }\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      msg: ''\n\t    };\n\t  }\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      msg: ''\n\t    };\n\t  }\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _stringify = __webpack_require__(1);\n\t\n\tvar _stringify2 = _interopRequireDefault(_stringify);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t\n\t    vuex: {\n\t        actions: {\n\t\n\t            executa: function executa(_ref) {\n\t                var dispatch = _ref.dispatch;\n\t\n\t                var data = JSON.parse((0, _stringify2.default)(this.$data.data));\n\t                dispatch('ATUALIZA_MODAL', data);\n\t                jQuery('#modal1').openModal();\n\t            }\n\t        }\n\t\n\t    },\n\t\n\t    data: function data() {\n\t        return {\n\t\n\t            data: {\n\t                titulo: '',\n\t                mensagem: '',\n\t                tipo: '',\n\t                inputvisible: false\n\t            },\n\t\n\t            dados: {\n\t                name: '',\n\t                email: '',\n\t                mensagem: ''\n\t\n\t            }\n\t\n\t        };\n\t    },\n\t\n\t\n\t    methods: {\n\t        enviar: function enviar(event) {\n\t            var _this = this;\n\t\n\t            event.preventDefault();\n\t\n\t            var config = {\n\t                headers: {\n\t                    'Content-Type': 'application/x-www-form-urlencoded'\n\t                }\n\t            };\n\t\n\t            if (this.dados.name === \"\" || this.dados.email === \"\" || this.dados.mensagem === \"\") {\n\t                this.$data.data = {\n\t                    titulo: 'Atenção',\n\t                    mensagem: 'Todos os campos são obrigatórios ;)',\n\t                    tipo: 'WARNING',\n\t                    inputvisible: false\n\t                };\n\t                this.executa();\n\t                return;\n\t            }\n\t\n\t            var dados = 'dados=' + (0, _stringify2.default)(this.dados);\n\t\n\t            this.$http.post('/email', dados, config).then(function (response) {\n\t                _this.$data.data = {\n\t                    titulo: 'Mensagem enviada',\n\t                    mensagem: 'Logo, logo entro em contato ;)',\n\t                    tipo: 'WARNING',\n\t                    inputvisible: false\n\t                };\n\t                _this.executa();\n\t            }, function (response) {\n\t                _this.$data.data = {\n\t                    titulo: 'Erro ao enviar',\n\t                    mensagem: 'Por gentileza tente novamente ;(',\n\t                    tipo: 'WARNING',\n\t                    inputvisible: false\n\t                };\n\t                _this.executa();\n\t            });\n\t        }\n\t    }\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      msg: ''\n\t    };\n\t  }\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _jm9Scrool = __webpack_require__(2);\n\t\n\texports.default = {\n\t\n\t    name: 'footer-component',\n\t\n\t    data: function data() {\n\t        return {\n\t            counter: {}\n\t        };\n\t    },\n\t\n\t\n\t    methods: {},\n\t\n\t    ready: function ready() {\n\t\n\t        (0, _jm9Scrool.scroll)(\"scrollSuave\");\n\t    }\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _stringify = __webpack_require__(1);\n\t\n\tvar _stringify2 = _interopRequireDefault(_stringify);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t\n\t    vuex: {\n\t\n\t        actions: {\n\t\n\t            executa: function executa(_ref) {\n\t                var dispatch = _ref.dispatch;\n\t\n\t\n\t                this.$data.tipo = 'DOWNLOAD';\n\t                var data = JSON.parse((0, _stringify2.default)(this.$data));\n\t                dispatch('OK_CLICK', data);\n\t            }\n\t        },\n\t        getters: {\n\t            getValue: function getValue(store) {\n\t                return store.Modal;\n\t            }\n\t\n\t        }\n\t    },\n\t\n\t    data: function data() {\n\t        return {\n\t            titulo: '',\n\t            mensagem: '',\n\t            tipo: '',\n\t            senha: '',\n\t            inputvisible: true\n\t        };\n\t    },\n\t    ready: function ready() {\n\t        this.senha = '';\n\t        this.data = this.getValue;\n\t    },\n\t\n\t\n\t    methods: {\n\t        ok: function ok() {\n\t\n\t            this.executa();\n\t            jQuery('#modal1').closeModal();\n\t        }\n\t    }\n\t\n\t};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <span id=forkongithub class=hide-on-med-and-down><a href=https://github.com/juscilan>Fork me on GitHub</a></span> <nav class=white id=nav> <div class=\\\"nav-wrapper container\\\"> <a id=logo-container href=/ class=brand-logo><img src=https://media.licdn.com/mpr/mpr/shrink_100_100/p/7/005/08d/09b/109529d.jpg class=\\\"circle bordabranca\\\" alt=\\\"Juscilan Moreto\\\" title=\\\"Juscilan Moreto\\\"></a> <a href=# data-activates=mobile-demo class=button-collapse><i class=material-icons>menu</i></a> <ul class=\\\"right hide-on-med-and-down\\\"> <li><a href=# @click=executa()>Curriculum em PDF</a></li> <li><a href=#contato class=scrollSuave>Contato</a></li> <li><a href=#sobre class=scrollSuave> Sobre</a></li> </ul> <ul class=side-nav id=mobile-demo> <li><a href=#contato>Contato</a></li> <li><a href=#sobre>Sobre</a></li> </ul> </div> </nav> \";\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <h5 class=\\\"header center teal-text text-lighten hide-on-med-and-down\\\"> www.juscilan.com </h5> <div id=index-banner class=parallax-container> <div class=\\\"section no-pad-bot\\\"> <div class=container> <div class=\\\"row center\\\" style=margin-top:85px> <h5 class=\\\"header col s12 light-image center\\\">Desenvolvimento</h5> <h5 class=\\\"header col s12 light-image center\\\">de soluções </h5> <h5 class=\\\"header col s12 light-image center\\\">em software.</h5> </div> <br><br> </div> </div> <div class=parallax><img src=/img/topo.jpg alt=\\\"\\\"></div> </div> <h5 class=\\\"header center teal-text text-lighten\\\">\\\"think before, then do.\\\"</h5> \";\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div class=container> <div class=section> </div> <div class=section> <div class=row> <div class=\\\"col s12 m4\\\"> <div class=icon-block> <h2 class=\\\"center black-text\\\"><i class=material-icons>phonelink_ring</i></h2> <h5 class=center>Aplicativos Mobile</h5> <p class=light>Desenvolvimento de apps Android <a href=\\\"https://play.google.com/store/apps/developer?id=Juscilan+Moreto\\\">Google&copy</a> utilizando a linguagem Java&copy AsyncTask com integração de Api´s em json, otimizando consumo de banda e recursos do device.</p> </div> </div> <div class=\\\"col s12 m4\\\"> <div class=icon-block> <h2 class=\\\"center black-text\\\"><i class=material-icons>shopping_cart</i></h2> <h5 class=center>E-commerce</h5> <p class=light>Experiências em manutenção de ERP com integração da parte de faturamento e emissão de Nfe. Consumo e disponibilização de serviços e webservices, tanto <b>SOAP</b> <br> &ltXML&gt quanto <b>RESTful</b> {json}.</p> </div> </div> <div class=\\\"col s12 m4\\\"> <div class=icon-block> <h2 class=\\\"center black-text\\\"><i class=material-icons>comment</i></h2> <h5 class=center>Artigos</h5> <p class=light> <a href=\\\"https://www.linkedin.com/pulse/import%C3%A2ncia-de-se-ter-um-site-responsivo-juscilan-moreto?trk=pulse_spock-articles\\\">A importância de um site responsivo.</a> <br> <a href=\\\"https://www.linkedin.com/pulse/efici%C3%AAncia-x-efic%C3%A1cia-mais-um-round-juscilan-moreto?trk=pulse_spock-articles\\\">Eficiência X Eficácia - Mais um round!</a> <br> <a href=https://medium.com/@Juscilan/nodejs-com-socket-io-e-arduino-30f4922566f9#.wq254047d> NodeJs Socket Arduino </a> </p> </div> </div> </div> </div> </div> \";\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div class=\\\"parallax-container valign-wrapper\\\"> <div class=\\\"section no-pad-bot\\\"> <div class=container> <div class=\\\"row center\\\"> <h5 class=\\\"header col s12 light-image center\\\">Html5, Css e Javascript</h5> </div> </div> </div> <div class=parallax><img src=/img/meio.jpg alt=\\\"\\\"></div> </div> \";\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div> <div id=contato class=section> <div class=row> <div class=\\\"col s12 center\\\"> <h4>Formulário para contato</h4> <form class=\\\"col s12\\\"> <div class=row> <div class=\\\"input-field col s12\\\"> <input id=name type=text class=validate v-model=dados.name> <label for=first_name>Nome</label> </div> </div> <div class=row> <div class=\\\"input-field col s12\\\"> <input id=email type=text class=validate v-model=dados.email> <label for=email>Email</label> </div> </div> <div class=row> <div class=\\\"input-field col s12\\\"> <input id=mensagem type=text class=validate v-model=dados.mensagem> <label for=first_name>Mensagem</label> </div> </div> <div class=row> <button @click=enviar($event) class=\\\"btn waves-effect waves-light\\\" name=action>Enviar<i class=\\\"material-icons right\\\">send</i> </button> </div> </form> </div> </div> </div> </div> \";\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div class=\\\"parallax-container valign-wrapper\\\"> <div class=\\\"section no-pad-bot\\\"> <div class=container> <div class=\\\"row center\\\"> <h5 class=\\\"header col s12 light-image\\\"> Node.js, Asp.NET MVC, Python ...</h5> </div> </div> </div> <div class=parallax><img src=/img/rodape.jpg alt=\\\"\\\"></div> </div> \";\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <footer id=qq class=\\\"page-footer teal\\\"> <div class=container> <div class=row> <div class=\\\"col l6 s12\\\"> <h5 id=sobre class=white-text>Mais sobre mim...</h5> <p class=\\\"grey-text text-lighten-4\\\"> Meu nome é Juscilan Moreto, sou graduado em Análise e desenvolvimento de sistemas, ajudei a desenvolver e implantar softwares em grandes empresas como Carrefour, Alpargatas, Bematech, Leroy Merlin e PRODESP, possuo vasta experiência em testes, análise, modelagem, desenvolvimento dos mais variados tipos de sistemas. Focando no desenvolvimento de sistemas para Web/Intranet como Asp.NET MVC, C#, SqlServer e Oracle e também tecnologias Full-Stack Javascript (MongoDB, Express.js, Vue.js e Node.js). </p> </div> <div class=\\\"col l3 s12\\\"> <h5 class=white-text>Social</h5> <ul> <li><a class=white-text href=https://br.linkedin.com/in/juscilan-moreto-8815641b>Linkedin</a></li> <li><a class=white-text href=http://twitter.com/juscilan>Twitter</a></li> <li><a class=white-text href=\\\"https://www.facebook.com/jota.moreto?hc_location=ufi\\\">Facebook</a></li> <li><a class=white-text href=http://Github.com/juscilan>Github</a></li> </ul> </div> <div class=\\\"col l3 s12\\\"> <h5 class=white-text>Meus contatos</h5> <ul> <li><a class=white-text href=#>+55 11 98167-1595</a></li> <li><a class=white-text href=mailto:juscilan@gmail.com>juscilan@gmail.com</a></li> <li><a class=white-text href=#>Skype: mjuscilan</a></li> </ul> <h5 class=white-text>Google Play Store</h5> <ul> <li><a class=white-text href=\\\"https://play.google.com/store/apps/developer?id=Juscilan+Moreto\\\">Aplicativos Android publicados</a></li> </ul> <p class=\\\"grey-text text-lighten-4\\\"> &copy; 2016 - juscilan.com  </p> </div> </div> </div> <div> <div class=center><a class=\\\"white-text scrollSuave\\\" href=#nav>Topo</a></div> </div> <div class=footer-copyright> <div class=container> <p class=\\\"center header col s12 light\\\">Versão 3.0.0.0 - <span>{{counter.visitors}}</span> </p> </div> </div> </footer> \";\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div id=modal1 class=modal> <div class=modal-content> <h4>{{getValue.titulo}}</h4> <p> {{getValue.mensagem}}</p> <input id=senhaModal v-show=getValue.inputvisible autofocus type=password v-model=senha> </div> <div class=modal-footer> <button id=closeModal class=\\\"modal-action modal-close waves-effect waves-green btn\\\" @click=ok()>Ok</button> </div> </div> \";\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(3)\n\t__vue_template__ = __webpack_require__(11)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(4)\n\t__vue_template__ = __webpack_require__(12)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(5)\n\t__vue_template__ = __webpack_require__(13)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(6)\n\t__vue_template__ = __webpack_require__(14)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(7)\n\t__vue_template__ = __webpack_require__(15)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(8)\n\t__vue_template__ = __webpack_require__(16)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(9)\n\t__vue_template__ = __webpack_require__(17)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(10)\n\t__vue_template__ = __webpack_require__(18)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar core  = __webpack_require__(28)\n\t  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});\n\tmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n\t  return $JSON.stringify.apply($JSON, arguments);\n\t};\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\tvar core = module.exports = {version: '2.4.0'};\n\tif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * vue-resource v0.9.3\n\t * https://github.com/vuejs/vue-resource\n\t * Released under the MIT License.\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n\t */\n\t\n\tvar RESOLVED = 0;\n\tvar REJECTED = 1;\n\tvar PENDING = 2;\n\t\n\tfunction Promise$2(executor) {\n\t\n\t    this.state = PENDING;\n\t    this.value = undefined;\n\t    this.deferred = [];\n\t\n\t    var promise = this;\n\t\n\t    try {\n\t        executor(function (x) {\n\t            promise.resolve(x);\n\t        }, function (r) {\n\t            promise.reject(r);\n\t        });\n\t    } catch (e) {\n\t        promise.reject(e);\n\t    }\n\t}\n\t\n\tPromise$2.reject = function (r) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        reject(r);\n\t    });\n\t};\n\t\n\tPromise$2.resolve = function (x) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        resolve(x);\n\t    });\n\t};\n\t\n\tPromise$2.all = function all(iterable) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        var count = 0,\n\t            result = [];\n\t\n\t        if (iterable.length === 0) {\n\t            resolve(result);\n\t        }\n\t\n\t        function resolver(i) {\n\t            return function (x) {\n\t                result[i] = x;\n\t                count += 1;\n\t\n\t                if (count === iterable.length) {\n\t                    resolve(result);\n\t                }\n\t            };\n\t        }\n\t\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise$2.resolve(iterable[i]).then(resolver(i), reject);\n\t        }\n\t    });\n\t};\n\t\n\tPromise$2.race = function race(iterable) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise$2.resolve(iterable[i]).then(resolve, reject);\n\t        }\n\t    });\n\t};\n\t\n\tvar p$1 = Promise$2.prototype;\n\t\n\tp$1.resolve = function resolve(x) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (x === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        var called = false;\n\t\n\t        try {\n\t            var then = x && x['then'];\n\t\n\t            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n\t                then.call(x, function (x) {\n\t                    if (!called) {\n\t                        promise.resolve(x);\n\t                    }\n\t                    called = true;\n\t                }, function (r) {\n\t                    if (!called) {\n\t                        promise.reject(r);\n\t                    }\n\t                    called = true;\n\t                });\n\t                return;\n\t            }\n\t        } catch (e) {\n\t            if (!called) {\n\t                promise.reject(e);\n\t            }\n\t            return;\n\t        }\n\t\n\t        promise.state = RESOLVED;\n\t        promise.value = x;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp$1.reject = function reject(reason) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (reason === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        promise.state = REJECTED;\n\t        promise.value = reason;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp$1.notify = function notify() {\n\t    var promise = this;\n\t\n\t    nextTick(function () {\n\t        if (promise.state !== PENDING) {\n\t            while (promise.deferred.length) {\n\t                var deferred = promise.deferred.shift(),\n\t                    onResolved = deferred[0],\n\t                    onRejected = deferred[1],\n\t                    resolve = deferred[2],\n\t                    reject = deferred[3];\n\t\n\t                try {\n\t                    if (promise.state === RESOLVED) {\n\t                        if (typeof onResolved === 'function') {\n\t                            resolve(onResolved.call(undefined, promise.value));\n\t                        } else {\n\t                            resolve(promise.value);\n\t                        }\n\t                    } else if (promise.state === REJECTED) {\n\t                        if (typeof onRejected === 'function') {\n\t                            resolve(onRejected.call(undefined, promise.value));\n\t                        } else {\n\t                            reject(promise.value);\n\t                        }\n\t                    }\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            }\n\t        }\n\t    });\n\t};\n\t\n\tp$1.then = function then(onResolved, onRejected) {\n\t    var promise = this;\n\t\n\t    return new Promise$2(function (resolve, reject) {\n\t        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n\t        promise.notify();\n\t    });\n\t};\n\t\n\tp$1.catch = function (onRejected) {\n\t    return this.then(undefined, onRejected);\n\t};\n\t\n\tvar PromiseObj = window.Promise || Promise$2;\n\t\n\tfunction Promise$1(executor, context) {\n\t\n\t    if (executor instanceof PromiseObj) {\n\t        this.promise = executor;\n\t    } else {\n\t        this.promise = new PromiseObj(executor.bind(context));\n\t    }\n\t\n\t    this.context = context;\n\t}\n\t\n\tPromise$1.all = function (iterable, context) {\n\t    return new Promise$1(PromiseObj.all(iterable), context);\n\t};\n\t\n\tPromise$1.resolve = function (value, context) {\n\t    return new Promise$1(PromiseObj.resolve(value), context);\n\t};\n\t\n\tPromise$1.reject = function (reason, context) {\n\t    return new Promise$1(PromiseObj.reject(reason), context);\n\t};\n\t\n\tPromise$1.race = function (iterable, context) {\n\t    return new Promise$1(PromiseObj.race(iterable), context);\n\t};\n\t\n\tvar p = Promise$1.prototype;\n\t\n\tp.bind = function (context) {\n\t    this.context = context;\n\t    return this;\n\t};\n\t\n\tp.then = function (fulfilled, rejected) {\n\t\n\t    if (fulfilled && fulfilled.bind && this.context) {\n\t        fulfilled = fulfilled.bind(this.context);\n\t    }\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    return new Promise$1(this.promise.then(fulfilled, rejected), this.context);\n\t};\n\t\n\tp.catch = function (rejected) {\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    return new Promise$1(this.promise.catch(rejected), this.context);\n\t};\n\t\n\tp.finally = function (callback) {\n\t\n\t    return this.then(function (value) {\n\t        callback.call(this);\n\t        return value;\n\t    }, function (reason) {\n\t        callback.call(this);\n\t        return PromiseObj.reject(reason);\n\t    });\n\t};\n\t\n\tvar debug = false;\n\tvar util = {};\n\tvar array = [];\n\tfunction Util (Vue) {\n\t    util = Vue.util;\n\t    debug = Vue.config.debug || !Vue.config.silent;\n\t}\n\t\n\tfunction warn(msg) {\n\t    if (typeof console !== 'undefined' && debug) {\n\t        console.warn('[VueResource warn]: ' + msg);\n\t    }\n\t}\n\t\n\tfunction error(msg) {\n\t    if (typeof console !== 'undefined') {\n\t        console.error(msg);\n\t    }\n\t}\n\t\n\tfunction nextTick(cb, ctx) {\n\t    return util.nextTick(cb, ctx);\n\t}\n\t\n\tfunction trim(str) {\n\t    return str.replace(/^\\s*|\\s*$/g, '');\n\t}\n\t\n\tvar isArray = Array.isArray;\n\t\n\tfunction isString(val) {\n\t    return typeof val === 'string';\n\t}\n\t\n\tfunction isBoolean(val) {\n\t    return val === true || val === false;\n\t}\n\t\n\tfunction isFunction(val) {\n\t    return typeof val === 'function';\n\t}\n\t\n\tfunction isObject(obj) {\n\t    return obj !== null && typeof obj === 'object';\n\t}\n\t\n\tfunction isPlainObject(obj) {\n\t    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n\t}\n\t\n\tfunction isFormData(obj) {\n\t    return typeof FormData !== 'undefined' && obj instanceof FormData;\n\t}\n\t\n\tfunction when(value, fulfilled, rejected) {\n\t\n\t    var promise = Promise$1.resolve(value);\n\t\n\t    if (arguments.length < 2) {\n\t        return promise;\n\t    }\n\t\n\t    return promise.then(fulfilled, rejected);\n\t}\n\t\n\tfunction options(fn, obj, opts) {\n\t\n\t    opts = opts || {};\n\t\n\t    if (isFunction(opts)) {\n\t        opts = opts.call(obj);\n\t    }\n\t\n\t    return merge(fn.bind({ $vm: obj, $options: opts }), fn, { $options: opts });\n\t}\n\t\n\tfunction each(obj, iterator) {\n\t\n\t    var i, key;\n\t\n\t    if (typeof obj.length == 'number') {\n\t        for (i = 0; i < obj.length; i++) {\n\t            iterator.call(obj[i], obj[i], i);\n\t        }\n\t    } else if (isObject(obj)) {\n\t        for (key in obj) {\n\t            if (obj.hasOwnProperty(key)) {\n\t                iterator.call(obj[key], obj[key], key);\n\t            }\n\t        }\n\t    }\n\t\n\t    return obj;\n\t}\n\t\n\tvar assign = Object.assign || _assign;\n\t\n\tfunction merge(target) {\n\t\n\t    var args = array.slice.call(arguments, 1);\n\t\n\t    args.forEach(function (source) {\n\t        _merge(target, source, true);\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction defaults(target) {\n\t\n\t    var args = array.slice.call(arguments, 1);\n\t\n\t    args.forEach(function (source) {\n\t\n\t        for (var key in source) {\n\t            if (target[key] === undefined) {\n\t                target[key] = source[key];\n\t            }\n\t        }\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction _assign(target) {\n\t\n\t    var args = array.slice.call(arguments, 1);\n\t\n\t    args.forEach(function (source) {\n\t        _merge(target, source);\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction _merge(target, source, deep) {\n\t    for (var key in source) {\n\t        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n\t            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n\t                target[key] = {};\n\t            }\n\t            if (isArray(source[key]) && !isArray(target[key])) {\n\t                target[key] = [];\n\t            }\n\t            _merge(target[key], source[key], deep);\n\t        } else if (source[key] !== undefined) {\n\t            target[key] = source[key];\n\t        }\n\t    }\n\t}\n\t\n\tfunction root (options, next) {\n\t\n\t    var url = next(options);\n\t\n\t    if (isString(options.root) && !url.match(/^(https?:)?\\//)) {\n\t        url = options.root + '/' + url;\n\t    }\n\t\n\t    return url;\n\t}\n\t\n\tfunction query (options, next) {\n\t\n\t    var urlParams = Object.keys(Url.options.params),\n\t        query = {},\n\t        url = next(options);\n\t\n\t    each(options.params, function (value, key) {\n\t        if (urlParams.indexOf(key) === -1) {\n\t            query[key] = value;\n\t        }\n\t    });\n\t\n\t    query = Url.params(query);\n\t\n\t    if (query) {\n\t        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n\t    }\n\t\n\t    return url;\n\t}\n\t\n\t/**\n\t * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n\t */\n\t\n\tfunction expand(url, params, variables) {\n\t\n\t    var tmpl = parse(url),\n\t        expanded = tmpl.expand(params);\n\t\n\t    if (variables) {\n\t        variables.push.apply(variables, tmpl.vars);\n\t    }\n\t\n\t    return expanded;\n\t}\n\t\n\tfunction parse(template) {\n\t\n\t    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n\t        variables = [];\n\t\n\t    return {\n\t        vars: variables,\n\t        expand: function (context) {\n\t            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n\t                if (expression) {\n\t\n\t                    var operator = null,\n\t                        values = [];\n\t\n\t                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n\t                        operator = expression.charAt(0);\n\t                        expression = expression.substr(1);\n\t                    }\n\t\n\t                    expression.split(/,/g).forEach(function (variable) {\n\t                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n\t                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n\t                        variables.push(tmp[1]);\n\t                    });\n\t\n\t                    if (operator && operator !== '+') {\n\t\n\t                        var separator = ',';\n\t\n\t                        if (operator === '?') {\n\t                            separator = '&';\n\t                        } else if (operator !== '#') {\n\t                            separator = operator;\n\t                        }\n\t\n\t                        return (values.length !== 0 ? operator : '') + values.join(separator);\n\t                    } else {\n\t                        return values.join(',');\n\t                    }\n\t                } else {\n\t                    return encodeReserved(literal);\n\t                }\n\t            });\n\t        }\n\t    };\n\t}\n\t\n\tfunction getValues(context, operator, key, modifier) {\n\t\n\t    var value = context[key],\n\t        result = [];\n\t\n\t    if (isDefined(value) && value !== '') {\n\t        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n\t            value = value.toString();\n\t\n\t            if (modifier && modifier !== '*') {\n\t                value = value.substring(0, parseInt(modifier, 10));\n\t            }\n\t\n\t            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n\t        } else {\n\t            if (modifier === '*') {\n\t                if (Array.isArray(value)) {\n\t                    value.filter(isDefined).forEach(function (value) {\n\t                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n\t                    });\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (isDefined(value[k])) {\n\t                            result.push(encodeValue(operator, value[k], k));\n\t                        }\n\t                    });\n\t                }\n\t            } else {\n\t                var tmp = [];\n\t\n\t                if (Array.isArray(value)) {\n\t                    value.filter(isDefined).forEach(function (value) {\n\t                        tmp.push(encodeValue(operator, value));\n\t                    });\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (isDefined(value[k])) {\n\t                            tmp.push(encodeURIComponent(k));\n\t                            tmp.push(encodeValue(operator, value[k].toString()));\n\t                        }\n\t                    });\n\t                }\n\t\n\t                if (isKeyOperator(operator)) {\n\t                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n\t                } else if (tmp.length !== 0) {\n\t                    result.push(tmp.join(','));\n\t                }\n\t            }\n\t        }\n\t    } else {\n\t        if (operator === ';') {\n\t            result.push(encodeURIComponent(key));\n\t        } else if (value === '' && (operator === '&' || operator === '?')) {\n\t            result.push(encodeURIComponent(key) + '=');\n\t        } else if (value === '') {\n\t            result.push('');\n\t        }\n\t    }\n\t\n\t    return result;\n\t}\n\t\n\tfunction isDefined(value) {\n\t    return value !== undefined && value !== null;\n\t}\n\t\n\tfunction isKeyOperator(operator) {\n\t    return operator === ';' || operator === '&' || operator === '?';\n\t}\n\t\n\tfunction encodeValue(operator, value, key) {\n\t\n\t    value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeURIComponent(value);\n\t\n\t    if (key) {\n\t        return encodeURIComponent(key) + '=' + value;\n\t    } else {\n\t        return value;\n\t    }\n\t}\n\t\n\tfunction encodeReserved(str) {\n\t    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n\t        if (!/%[0-9A-Fa-f]/.test(part)) {\n\t            part = encodeURI(part);\n\t        }\n\t        return part;\n\t    }).join('');\n\t}\n\t\n\tfunction template (options) {\n\t\n\t    var variables = [],\n\t        url = expand(options.url, options.params, variables);\n\t\n\t    variables.forEach(function (key) {\n\t        delete options.params[key];\n\t    });\n\t\n\t    return url;\n\t}\n\t\n\t/**\n\t * Service for URL templating.\n\t */\n\t\n\tvar ie = document.documentMode;\n\tvar el = document.createElement('a');\n\t\n\tfunction Url(url, params) {\n\t\n\t    var self = this || {},\n\t        options = url,\n\t        transform;\n\t\n\t    if (isString(url)) {\n\t        options = { url: url, params: params };\n\t    }\n\t\n\t    options = merge({}, Url.options, self.$options, options);\n\t\n\t    Url.transforms.forEach(function (handler) {\n\t        transform = factory(handler, transform, self.$vm);\n\t    });\n\t\n\t    return transform(options);\n\t}\n\t\n\t/**\n\t * Url options.\n\t */\n\t\n\tUrl.options = {\n\t    url: '',\n\t    root: null,\n\t    params: {}\n\t};\n\t\n\t/**\n\t * Url transforms.\n\t */\n\t\n\tUrl.transforms = [template, query, root];\n\t\n\t/**\n\t * Encodes a Url parameter string.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tUrl.params = function (obj) {\n\t\n\t    var params = [],\n\t        escape = encodeURIComponent;\n\t\n\t    params.add = function (key, value) {\n\t\n\t        if (isFunction(value)) {\n\t            value = value();\n\t        }\n\t\n\t        if (value === null) {\n\t            value = '';\n\t        }\n\t\n\t        this.push(escape(key) + '=' + escape(value));\n\t    };\n\t\n\t    serialize(params, obj);\n\t\n\t    return params.join('&').replace(/%20/g, '+');\n\t};\n\t\n\t/**\n\t * Parse a URL and return its components.\n\t *\n\t * @param {String} url\n\t */\n\t\n\tUrl.parse = function (url) {\n\t\n\t    if (ie) {\n\t        el.href = url;\n\t        url = el.href;\n\t    }\n\t\n\t    el.href = url;\n\t\n\t    return {\n\t        href: el.href,\n\t        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n\t        port: el.port,\n\t        host: el.host,\n\t        hostname: el.hostname,\n\t        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n\t        search: el.search ? el.search.replace(/^\\?/, '') : '',\n\t        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n\t    };\n\t};\n\t\n\tfunction factory(handler, next, vm) {\n\t    return function (options) {\n\t        return handler.call(vm, options, next);\n\t    };\n\t}\n\t\n\tfunction serialize(params, obj, scope) {\n\t\n\t    var array = isArray(obj),\n\t        plain = isPlainObject(obj),\n\t        hash;\n\t\n\t    each(obj, function (value, key) {\n\t\n\t        hash = isObject(value) || isArray(value);\n\t\n\t        if (scope) {\n\t            key = scope + '[' + (plain || hash ? key : '') + ']';\n\t        }\n\t\n\t        if (!scope && array) {\n\t            params.add(value.name, value.value);\n\t        } else if (hash) {\n\t            serialize(params, value, key);\n\t        } else {\n\t            params.add(key, value);\n\t        }\n\t    });\n\t}\n\t\n\tfunction xdrClient (request) {\n\t    return new Promise$1(function (resolve) {\n\t\n\t        var xdr = new XDomainRequest(),\n\t            handler = function (event) {\n\t\n\t            var response = request.respondWith(xdr.responseText, {\n\t                status: xdr.status,\n\t                statusText: xdr.statusText\n\t            });\n\t\n\t            resolve(response);\n\t        };\n\t\n\t        request.abort = function () {\n\t            return xdr.abort();\n\t        };\n\t\n\t        xdr.open(request.method, request.getUrl(), true);\n\t        xdr.timeout = 0;\n\t        xdr.onload = handler;\n\t        xdr.onerror = handler;\n\t        xdr.ontimeout = function () {};\n\t        xdr.onprogress = function () {};\n\t        xdr.send(request.getBody());\n\t    });\n\t}\n\t\n\tvar ORIGIN_URL = Url.parse(location.href);\n\tvar SUPPORTS_CORS = 'withCredentials' in new XMLHttpRequest();\n\t\n\tfunction cors (request, next) {\n\t\n\t    if (!isBoolean(request.crossOrigin) && crossOrigin(request)) {\n\t        request.crossOrigin = true;\n\t    }\n\t\n\t    if (request.crossOrigin) {\n\t\n\t        if (!SUPPORTS_CORS) {\n\t            request.client = xdrClient;\n\t        }\n\t\n\t        delete request.emulateHTTP;\n\t    }\n\t\n\t    next();\n\t}\n\t\n\tfunction crossOrigin(request) {\n\t\n\t    var requestUrl = Url.parse(Url(request));\n\t\n\t    return requestUrl.protocol !== ORIGIN_URL.protocol || requestUrl.host !== ORIGIN_URL.host;\n\t}\n\t\n\tfunction body (request, next) {\n\t\n\t    if (request.emulateJSON && isPlainObject(request.body)) {\n\t        request.body = Url.params(request.body);\n\t        request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n\t    }\n\t\n\t    if (isFormData(request.body)) {\n\t        delete request.headers['Content-Type'];\n\t    }\n\t\n\t    if (isPlainObject(request.body)) {\n\t        request.body = JSON.stringify(request.body);\n\t    }\n\t\n\t    next(function (response) {\n\t\n\t        var contentType = response.headers['Content-Type'];\n\t\n\t        if (isString(contentType) && contentType.indexOf('application/json') === 0) {\n\t\n\t            try {\n\t                response.data = response.json();\n\t            } catch (e) {\n\t                response.data = null;\n\t            }\n\t        } else {\n\t            response.data = response.text();\n\t        }\n\t    });\n\t}\n\t\n\tfunction jsonpClient (request) {\n\t    return new Promise$1(function (resolve) {\n\t\n\t        var name = request.jsonp || 'callback',\n\t            callback = '_jsonp' + Math.random().toString(36).substr(2),\n\t            body = null,\n\t            handler,\n\t            script;\n\t\n\t        handler = function (event) {\n\t\n\t            var status = 0;\n\t\n\t            if (event.type === 'load' && body !== null) {\n\t                status = 200;\n\t            } else if (event.type === 'error') {\n\t                status = 404;\n\t            }\n\t\n\t            resolve(request.respondWith(body, { status: status }));\n\t\n\t            delete window[callback];\n\t            document.body.removeChild(script);\n\t        };\n\t\n\t        request.params[name] = callback;\n\t\n\t        window[callback] = function (result) {\n\t            body = JSON.stringify(result);\n\t        };\n\t\n\t        script = document.createElement('script');\n\t        script.src = request.getUrl();\n\t        script.type = 'text/javascript';\n\t        script.async = true;\n\t        script.onload = handler;\n\t        script.onerror = handler;\n\t\n\t        document.body.appendChild(script);\n\t    });\n\t}\n\t\n\tfunction jsonp (request, next) {\n\t\n\t    if (request.method == 'JSONP') {\n\t        request.client = jsonpClient;\n\t    }\n\t\n\t    next(function (response) {\n\t\n\t        if (request.method == 'JSONP') {\n\t            response.data = response.json();\n\t        }\n\t    });\n\t}\n\t\n\tfunction before (request, next) {\n\t\n\t    if (isFunction(request.before)) {\n\t        request.before.call(this, request);\n\t    }\n\t\n\t    next();\n\t}\n\t\n\t/**\n\t * HTTP method override Interceptor.\n\t */\n\t\n\tfunction method (request, next) {\n\t\n\t    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n\t        request.headers['X-HTTP-Method-Override'] = request.method;\n\t        request.method = 'POST';\n\t    }\n\t\n\t    next();\n\t}\n\t\n\tfunction header (request, next) {\n\t\n\t    request.method = request.method.toUpperCase();\n\t    request.headers = assign({}, Http.headers.common, !request.crossOrigin ? Http.headers.custom : {}, Http.headers[request.method.toLowerCase()], request.headers);\n\t\n\t    next();\n\t}\n\t\n\t/**\n\t * Timeout Interceptor.\n\t */\n\t\n\tfunction timeout (request, next) {\n\t\n\t    var timeout;\n\t\n\t    if (request.timeout) {\n\t        timeout = setTimeout(function () {\n\t            request.abort();\n\t        }, request.timeout);\n\t    }\n\t\n\t    next(function (response) {\n\t\n\t        clearTimeout(timeout);\n\t    });\n\t}\n\t\n\tfunction xhrClient (request) {\n\t    return new Promise$1(function (resolve) {\n\t\n\t        var xhr = new XMLHttpRequest(),\n\t            handler = function (event) {\n\t\n\t            var response = request.respondWith('response' in xhr ? xhr.response : xhr.responseText, {\n\t                status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug\n\t                statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText),\n\t                headers: parseHeaders(xhr.getAllResponseHeaders())\n\t            });\n\t\n\t            resolve(response);\n\t        };\n\t\n\t        request.abort = function () {\n\t            return xhr.abort();\n\t        };\n\t\n\t        xhr.open(request.method, request.getUrl(), true);\n\t        xhr.timeout = 0;\n\t        xhr.onload = handler;\n\t        xhr.onerror = handler;\n\t\n\t        if (request.progress) {\n\t            if (request.method === 'GET') {\n\t                xhr.addEventListener('progress', request.progress);\n\t            } else if (/^(POST|PUT)$/i.test(request.method)) {\n\t                xhr.upload.addEventListener('progress', request.progress);\n\t            }\n\t        }\n\t\n\t        if (request.credentials === true) {\n\t            xhr.withCredentials = true;\n\t        }\n\t\n\t        each(request.headers || {}, function (value, header) {\n\t            xhr.setRequestHeader(header, value);\n\t        });\n\t\n\t        xhr.send(request.getBody());\n\t    });\n\t}\n\t\n\tfunction parseHeaders(str) {\n\t\n\t    var headers = {},\n\t        value,\n\t        name,\n\t        i;\n\t\n\t    each(trim(str).split('\\n'), function (row) {\n\t\n\t        i = row.indexOf(':');\n\t        name = trim(row.slice(0, i));\n\t        value = trim(row.slice(i + 1));\n\t\n\t        if (headers[name]) {\n\t\n\t            if (isArray(headers[name])) {\n\t                headers[name].push(value);\n\t            } else {\n\t                headers[name] = [headers[name], value];\n\t            }\n\t        } else {\n\t\n\t            headers[name] = value;\n\t        }\n\t    });\n\t\n\t    return headers;\n\t}\n\t\n\tfunction Client (context) {\n\t\n\t    var reqHandlers = [sendRequest],\n\t        resHandlers = [],\n\t        handler;\n\t\n\t    if (!isObject(context)) {\n\t        context = null;\n\t    }\n\t\n\t    function Client(request) {\n\t        return new Promise$1(function (resolve) {\n\t\n\t            function exec() {\n\t\n\t                handler = reqHandlers.pop();\n\t\n\t                if (isFunction(handler)) {\n\t                    handler.call(context, request, next);\n\t                } else {\n\t                    warn('Invalid interceptor of type ' + typeof handler + ', must be a function');\n\t                    next();\n\t                }\n\t            }\n\t\n\t            function next(response) {\n\t\n\t                if (isFunction(response)) {\n\t\n\t                    resHandlers.unshift(response);\n\t                } else if (isObject(response)) {\n\t\n\t                    resHandlers.forEach(function (handler) {\n\t                        response = when(response, function (response) {\n\t                            return handler.call(context, response) || response;\n\t                        });\n\t                    });\n\t\n\t                    when(response, resolve);\n\t\n\t                    return;\n\t                }\n\t\n\t                exec();\n\t            }\n\t\n\t            exec();\n\t        }, context);\n\t    }\n\t\n\t    Client.use = function (handler) {\n\t        reqHandlers.push(handler);\n\t    };\n\t\n\t    return Client;\n\t}\n\t\n\tfunction sendRequest(request, resolve) {\n\t\n\t    var client = request.client || xhrClient;\n\t\n\t    resolve(client(request));\n\t}\n\t\n\tvar classCallCheck = function (instance, Constructor) {\n\t  if (!(instance instanceof Constructor)) {\n\t    throw new TypeError(\"Cannot call a class as a function\");\n\t  }\n\t};\n\t\n\t/**\n\t * HTTP Response.\n\t */\n\t\n\tvar Response = function () {\n\t    function Response(body, _ref) {\n\t        var url = _ref.url;\n\t        var headers = _ref.headers;\n\t        var status = _ref.status;\n\t        var statusText = _ref.statusText;\n\t        classCallCheck(this, Response);\n\t\n\t\n\t        this.url = url;\n\t        this.body = body;\n\t        this.headers = headers || {};\n\t        this.status = status || 0;\n\t        this.statusText = statusText || '';\n\t        this.ok = status >= 200 && status < 300;\n\t    }\n\t\n\t    Response.prototype.text = function text() {\n\t        return this.body;\n\t    };\n\t\n\t    Response.prototype.blob = function blob() {\n\t        return new Blob([this.body]);\n\t    };\n\t\n\t    Response.prototype.json = function json() {\n\t        return JSON.parse(this.body);\n\t    };\n\t\n\t    return Response;\n\t}();\n\t\n\tvar Request = function () {\n\t    function Request(options) {\n\t        classCallCheck(this, Request);\n\t\n\t\n\t        this.method = 'GET';\n\t        this.body = null;\n\t        this.params = {};\n\t        this.headers = {};\n\t\n\t        assign(this, options);\n\t    }\n\t\n\t    Request.prototype.getUrl = function getUrl() {\n\t        return Url(this);\n\t    };\n\t\n\t    Request.prototype.getBody = function getBody() {\n\t        return this.body;\n\t    };\n\t\n\t    Request.prototype.respondWith = function respondWith(body, options) {\n\t        return new Response(body, assign(options || {}, { url: this.getUrl() }));\n\t    };\n\t\n\t    return Request;\n\t}();\n\t\n\t/**\n\t * Service for sending network requests.\n\t */\n\t\n\tvar CUSTOM_HEADERS = { 'X-Requested-With': 'XMLHttpRequest' };\n\tvar COMMON_HEADERS = { 'Accept': 'application/json, text/plain, */*' };\n\tvar JSON_CONTENT_TYPE = { 'Content-Type': 'application/json;charset=utf-8' };\n\t\n\tfunction Http(options) {\n\t\n\t    var self = this || {},\n\t        client = Client(self.$vm);\n\t\n\t    defaults(options || {}, self.$options, Http.options);\n\t\n\t    Http.interceptors.forEach(function (handler) {\n\t        client.use(handler);\n\t    });\n\t\n\t    return client(new Request(options)).then(function (response) {\n\t\n\t        return response.ok ? response : Promise$1.reject(response);\n\t    }, function (response) {\n\t\n\t        if (response instanceof Error) {\n\t            error(response);\n\t        }\n\t\n\t        return Promise$1.reject(response);\n\t    });\n\t}\n\t\n\tHttp.options = {};\n\t\n\tHttp.headers = {\n\t    put: JSON_CONTENT_TYPE,\n\t    post: JSON_CONTENT_TYPE,\n\t    patch: JSON_CONTENT_TYPE,\n\t    delete: JSON_CONTENT_TYPE,\n\t    custom: CUSTOM_HEADERS,\n\t    common: COMMON_HEADERS\n\t};\n\t\n\tHttp.interceptors = [before, timeout, method, body, jsonp, header, cors];\n\t\n\t['get', 'delete', 'head', 'jsonp'].forEach(function (method) {\n\t\n\t    Http[method] = function (url, options) {\n\t        return this(assign(options || {}, { url: url, method: method }));\n\t    };\n\t});\n\t\n\t['post', 'put', 'patch'].forEach(function (method) {\n\t\n\t    Http[method] = function (url, body, options) {\n\t        return this(assign(options || {}, { url: url, method: method, body: body }));\n\t    };\n\t});\n\t\n\tfunction Resource(url, params, actions, options) {\n\t\n\t    var self = this || {},\n\t        resource = {};\n\t\n\t    actions = assign({}, Resource.actions, actions);\n\t\n\t    each(actions, function (action, name) {\n\t\n\t        action = merge({ url: url, params: params || {} }, options, action);\n\t\n\t        resource[name] = function () {\n\t            return (self.$http || Http)(opts(action, arguments));\n\t        };\n\t    });\n\t\n\t    return resource;\n\t}\n\t\n\tfunction opts(action, args) {\n\t\n\t    var options = assign({}, action),\n\t        params = {},\n\t        body;\n\t\n\t    switch (args.length) {\n\t\n\t        case 2:\n\t\n\t            params = args[0];\n\t            body = args[1];\n\t\n\t            break;\n\t\n\t        case 1:\n\t\n\t            if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n\t                body = args[0];\n\t            } else {\n\t                params = args[0];\n\t            }\n\t\n\t            break;\n\t\n\t        case 0:\n\t\n\t            break;\n\t\n\t        default:\n\t\n\t            throw 'Expected up to 4 arguments [params, body], got ' + args.length + ' arguments';\n\t    }\n\t\n\t    options.body = body;\n\t    options.params = assign({}, options.params, params);\n\t\n\t    return options;\n\t}\n\t\n\tResource.actions = {\n\t\n\t    get: { method: 'GET' },\n\t    save: { method: 'POST' },\n\t    query: { method: 'GET' },\n\t    update: { method: 'PUT' },\n\t    remove: { method: 'DELETE' },\n\t    delete: { method: 'DELETE' }\n\t\n\t};\n\t\n\tfunction plugin(Vue) {\n\t\n\t    if (plugin.installed) {\n\t        return;\n\t    }\n\t\n\t    Util(Vue);\n\t\n\t    Vue.url = Url;\n\t    Vue.http = Http;\n\t    Vue.resource = Resource;\n\t    Vue.Promise = Promise$1;\n\t\n\t    Object.defineProperties(Vue.prototype, {\n\t\n\t        $url: {\n\t            get: function () {\n\t                return options(Vue.url, this, this.$options.url);\n\t            }\n\t        },\n\t\n\t        $http: {\n\t            get: function () {\n\t                return options(Vue.http, this, this.$options.http);\n\t            }\n\t        },\n\t\n\t        $resource: {\n\t            get: function () {\n\t                return Vue.resource.bind(this);\n\t            }\n\t        },\n\t\n\t        $promise: {\n\t            get: function () {\n\t                var _this = this;\n\t\n\t                return function (executor) {\n\t                    return new Vue.Promise(executor, _this);\n\t                };\n\t            }\n\t        }\n\t\n\t    });\n\t}\n\t\n\tif (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(plugin);\n\t}\n\t\n\tmodule.exports = plugin;\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.26\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    if (obj._isVue) {\n\t      delete obj._data[key];\n\t      obj._digest();\n\t    }\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE = UA && UA.indexOf('trident') > 0;\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n\tvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\n\tvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\t\n\t// detecting iOS UIWebView by indexedDB\n\tvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tvar _Set = undefined;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t  _Set.prototype.has = function (key) {\n\t    return this.set[key] !== undefined;\n\t  };\n\t  _Set.prototype.add = function (key) {\n\t    this.set[key] = 1;\n\t  };\n\t  _Set.prototype.clear = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t}\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    if (this.size === this.limit) {\n\t      removed = this.shift();\n\t    }\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  if (!node) return false;\n\t  var doc = node.ownerDocument.documentElement;\n\t  var parent = node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        // Firefox returns unknown for some \"Interactive elements.\"\n\t        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el, options);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el, options);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el, options) {\n\t  // dynamic syntax\n\t  var exp = el.getAttribute('is');\n\t  if (exp != null) {\n\t    if (resolveAsset(options, 'components', exp)) {\n\t      el.removeAttribute('is');\n\t      return { id: exp };\n\t    }\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  if (false) {\n\t    if (child.propsData && !vm) {\n\t      warn('propsData can only be used as an instantiation option.');\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  if (child['extends']) {\n\t    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      var mixin = child.mixins[i];\n\t      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n\t      parent = mergeOptions(parent, mixinOptions, vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (false) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE: isIE,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tisIos: isIos,\n\t\tiosVersionMatch: iosVersionMatch,\n\t\tiosVersion: iosVersion,\n\t\thasMutationObserverBug: hasMutationObserverBug,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initData().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here because the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    if (false) {\n\t      /* istanbul ignore if */\n\t      if (e.toString().match(/unsafe-eval|CSP/)) {\n\t        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n\t      } else {\n\t        warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t      }\n\t    }\n\t    return noop;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat literal values as paths\n\t  !literalValueRE$1.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue.length = 0;\n\t  userQueue.length = 0;\n\t  has = {};\n\t  circular = {};\n\t  waiting = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  var _again = true;\n\t\n\t  _function: while (_again) {\n\t    _again = false;\n\t\n\t    runBatcherQueue(queue);\n\t    runBatcherQueue(userQueue);\n\t    // user watchers triggered more watchers,\n\t    // keep flushing until it depletes\n\t    if (queue.length) {\n\t      _again = true;\n\t      continue _function;\n\t    }\n\t    // dev tool hook\n\t    /* istanbul ignore if */\n\t    if (devtools && config.devtools) {\n\t      devtools.emit('flush');\n\t    }\n\t    resetBatcherState();\n\t  }\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  queue.length = 0;\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tvar seenObjects = new _Set();\n\tfunction traverse(val, seen) {\n\t  var i = undefined,\n\t      keys = undefined;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = isArray(val);\n\t  var isO = isObject(val);\n\t  if ((isA || isO) && Object.isExtensible(val)) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return;\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i], seen);\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]], seen);\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\tvar commentRE = /<!--/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t  var commentMatch = commentRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch && !commentMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment. However, iOS Safari has\n\t  // bug when using directly cloned template content with touch\n\t  // events and can cause crashes when the nodes are removed from DOM, so we\n\t  // have to treat template elements as string templates. (#2805)\n\t  /* istanbul ignore if */\n\t  if (isRealTemplate(node)) {\n\t    return stringToFragment(node.innerHTML);\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      var target = prevEl.nextSibling;\n\t      /* istanbul ignore if */\n\t      if (!target) {\n\t        // reset end anchor position in case the position was messed up\n\t        // by an external drag-n-drop library.\n\t        after(this.end, prevEl);\n\t        target = this.end;\n\t      }\n\t      frag.before(target);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = getTrackByKey(index, key, value, trackByKey);\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else if (Object.isExtensible(value)) {\n\t        def(value, id, frag);\n\t      } else if (false) {\n\t        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * watcher's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Get the track by key for an item.\n\t *\n\t * @param {Number} index\n\t * @param {String} key\n\t * @param {*} value\n\t * @param {String} [trackByKey]\n\t */\n\t\n\tfunction getTrackByKey(index, key, value, trackByKey) {\n\t  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    // #3029 only update when the value changes. This prevent\n\t    // browsers from overwriting values like selectionStart\n\t    value = _toString(value);\n\t    if (value !== this.el.value) this.el.value = value;\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var _this = this;\n\t\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', function () {\n\t      nextTick(_this.forceUpdate);\n\t    });\n\t    if (!inDoc(el)) {\n\t      nextTick(this.forceUpdate);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  if (camel !== 'filter' && camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t\n\t      if (el[attr] !== attrValue) {\n\t        el[attr] = attrValue;\n\t      }\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (!value) {\n\t      this.cleanup();\n\t    } else if (typeof value === 'string') {\n\t      this.setClass(value.trim().split(/\\s+/));\n\t    } else {\n\t      this.setClass(normalize$1(value));\n\t    }\n\t  },\n\t\n\t  setClass: function setClass(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val) {\n\t        apply(this.el, val, addClass);\n\t      }\n\t    }\n\t    this.prevKeys = value;\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    var prevKeys = this.prevKeys;\n\t    if (!prevKeys) return;\n\t    var i = prevKeys.length;\n\t    while (i--) {\n\t      var key = prevKeys[i];\n\t      if (!value || value.indexOf(key) < 0) {\n\t        apply(this.el, key, removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Normalize objects and arrays (potentially containing objects)\n\t * into array of strings.\n\t *\n\t * @param {Object|Array<String|Object>} value\n\t * @return {Array<String>}\n\t */\n\t\n\tfunction normalize$1(value) {\n\t  var res = [];\n\t  if (isArray(value)) {\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var _key = value[i];\n\t      if (_key) {\n\t        if (typeof _key === 'string') {\n\t          res.push(_key);\n\t        } else {\n\t          for (var k in _key) {\n\t            if (_key[k]) res.push(k);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } else if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) res.push(key);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction apply(el, key, fn) {\n\t  key = key.trim();\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      this.el.removeAttribute(':is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var inlineProps = vm.$options.propsData;\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (inlineProps && hasOwn(inlineProps, path)) {\n\t        initProp(vm, prop, inlineProps[path]);\n\t      }if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value, vm);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (false) {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value, vm) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  if (typeof coerce === 'function') {\n\t    return coerce(value);\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n\t    return value;\n\t  }\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    oldId = oldId || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    removeClass(el, oldId + '-transition');\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && !isScript(node)) {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = _toString(value);\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          modifiers = parseModifiers(attr.name);\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tfunction isScript(el) {\n\t  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    var nodes = content.childNodes;\n\t    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n\t      return;\n\t    }\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node, true);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key)) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, value, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        // force the expression into a statement so that\n\t        // it always dynamically resolves the method to call (#2670)\n\t        // kinda ugly hack, but does the job.\n\t        value = attrs[i].value;\n\t        if (isSimplePath(value)) {\n\t          value += '.apply(this, $arguments)';\n\t        }\n\t        handler = (vm._scope || vm._context).$eval(value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop$1;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data && this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   * @param {Number} decimals Decimal places\n\t   */\n\t\n\t  currency: function currency(value, _currency, decimals) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    decimals = decimals != null ? decimals : 2;\n\t    var stringified = Math.abs(value).toFixed(decimals);\n\t    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    var length = args.length;\n\t    if (length > 1) {\n\t      var index = value % 10 - 1;\n\t      return index in args ? args[index] : args[length - 1];\n\t    } else {\n\t      return args[0] + (value === 1 ? '' : 's');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          if (!definition.name) {\n\t            definition.name = id;\n\t          }\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.26';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (false) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * Vuex v1.0.0-rc.2\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  (global.Vuex = factory());\n\t}(this, function () { 'use strict';\n\t\n\t  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n\t    return typeof obj;\n\t  } : function (obj) {\n\t    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n\t  };\n\t\n\t  var classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t\n\t  var createClass = function () {\n\t    function defineProperties(target, props) {\n\t      for (var i = 0; i < props.length; i++) {\n\t        var descriptor = props[i];\n\t        descriptor.enumerable = descriptor.enumerable || false;\n\t        descriptor.configurable = true;\n\t        if (\"value\" in descriptor) descriptor.writable = true;\n\t        Object.defineProperty(target, descriptor.key, descriptor);\n\t      }\n\t    }\n\t\n\t    return function (Constructor, protoProps, staticProps) {\n\t      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n\t      if (staticProps) defineProperties(Constructor, staticProps);\n\t      return Constructor;\n\t    };\n\t  }();\n\t\n\t  var toConsumableArray = function (arr) {\n\t    if (Array.isArray(arr)) {\n\t      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\t\n\t      return arr2;\n\t    } else {\n\t      return Array.from(arr);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Merge an array of objects into one.\n\t   *\n\t   * @param {Array<Object>} arr\n\t   * @return {Object}\n\t   */\n\t\n\t  function mergeObjects(arr) {\n\t    return arr.reduce(function (prev, obj) {\n\t      Object.keys(obj).forEach(function (key) {\n\t        var existing = prev[key];\n\t        if (existing) {\n\t          // allow multiple mutation objects to contain duplicate\n\t          // handlers for the same mutation type\n\t          if (Array.isArray(existing)) {\n\t            prev[key] = existing.concat(obj[key]);\n\t          } else {\n\t            prev[key] = [existing].concat(obj[key]);\n\t          }\n\t        } else {\n\t          prev[key] = obj[key];\n\t        }\n\t      });\n\t      return prev;\n\t    }, {});\n\t  }\n\t\n\t  /**\n\t   * Check whether the given value is Object or not\n\t   *\n\t   * @param {*} obj\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isObject(obj) {\n\t    return obj !== null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n\t  }\n\t\n\t  /**\n\t   * Get state sub tree by given keys.\n\t   *\n\t   * @param {Object} state\n\t   * @param {Array<String>} nestedKeys\n\t   * @return {Object}\n\t   */\n\t  function getNestedState(state, nestedKeys) {\n\t    return nestedKeys.reduce(function (state, key) {\n\t      return state[key];\n\t    }, state);\n\t  }\n\t\n\t  /**\n\t   * Hacks to get access to Vue internals.\n\t   * Maybe we should expose these...\n\t   */\n\t\n\t  var Watcher = void 0;\n\t  function getWatcher(vm) {\n\t    if (!Watcher) {\n\t      var noop = function noop() {};\n\t      var unwatch = vm.$watch(noop, noop);\n\t      Watcher = vm._watchers[0].constructor;\n\t      unwatch();\n\t    }\n\t    return Watcher;\n\t  }\n\t\n\t  var Dep = void 0;\n\t  function getDep(vm) {\n\t    if (!Dep) {\n\t      Dep = vm._data.__ob__.dep.constructor;\n\t    }\n\t    return Dep;\n\t  }\n\t\n\t  var hook = typeof window !== 'undefined' && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t  function devtoolPlugin(store) {\n\t    if (!hook) return;\n\t\n\t    hook.emit('vuex:init', store);\n\t\n\t    hook.on('vuex:travel-to-state', function (targetState) {\n\t      store.replaceState(targetState);\n\t    });\n\t\n\t    store.subscribe(function (mutation, state) {\n\t      hook.emit('vuex:mutation', mutation, state);\n\t    });\n\t  }\n\t\n\t  function override (Vue) {\n\t    var version = Number(Vue.version.split('.')[0]);\n\t\n\t    if (version >= 2) {\n\t      var usesInit = Vue.config._lifecycleHooks.indexOf('init') > -1;\n\t      Vue.mixin(usesInit ? { init: vuexInit } : { beforeCreate: vuexInit });\n\t    } else {\n\t      (function () {\n\t        // override init and inject vuex init procedure\n\t        // for 1.x backwards compatibility.\n\t        var _init = Vue.prototype._init;\n\t        Vue.prototype._init = function () {\n\t          var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t          options.init = options.init ? [vuexInit].concat(options.init) : vuexInit;\n\t          _init.call(this, options);\n\t        };\n\t      })();\n\t    }\n\t\n\t    /**\n\t     * Vuex init hook, injected into each instances init hooks list.\n\t     */\n\t\n\t    function vuexInit() {\n\t      var options = this.$options;\n\t      var store = options.store;\n\t      var vuex = options.vuex;\n\t      // store injection\n\t\n\t      if (store) {\n\t        this.$store = store;\n\t      } else if (options.parent && options.parent.$store) {\n\t        this.$store = options.parent.$store;\n\t      }\n\t      // vuex option handling\n\t      if (vuex) {\n\t        if (!this.$store) {\n\t          console.warn('[vuex] store not injected. make sure to ' + 'provide the store option in your root component.');\n\t        }\n\t        var state = vuex.state;\n\t        var actions = vuex.actions;\n\t        var getters = vuex.getters;\n\t        // handle deprecated state option\n\t\n\t        if (state && !getters) {\n\t          console.warn('[vuex] vuex.state option will been deprecated in 1.0. ' + 'Use vuex.getters instead.');\n\t          getters = state;\n\t        }\n\t        // getters\n\t        if (getters) {\n\t          options.computed = options.computed || {};\n\t          for (var key in getters) {\n\t            defineVuexGetter(this, key, getters[key]);\n\t          }\n\t        }\n\t        // actions\n\t        if (actions) {\n\t          options.methods = options.methods || {};\n\t          for (var _key in actions) {\n\t            options.methods[_key] = makeBoundAction(this.$store, actions[_key], _key);\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Setter for all getter properties.\n\t     */\n\t\n\t    function setter() {\n\t      throw new Error('vuex getter properties are read-only.');\n\t    }\n\t\n\t    /**\n\t     * Define a Vuex getter on an instance.\n\t     *\n\t     * @param {Vue} vm\n\t     * @param {String} key\n\t     * @param {Function} getter\n\t     */\n\t\n\t    function defineVuexGetter(vm, key, getter) {\n\t      if (typeof getter !== 'function') {\n\t        console.warn('[vuex] Getter bound to key \\'vuex.getters.' + key + '\\' is not a function.');\n\t      } else {\n\t        Object.defineProperty(vm, key, {\n\t          enumerable: true,\n\t          configurable: true,\n\t          get: makeComputedGetter(vm.$store, getter),\n\t          set: setter\n\t        });\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Make a computed getter, using the same caching mechanism of computed\n\t     * properties. In addition, it is cached on the raw getter function using\n\t     * the store's unique cache id. This makes the same getter shared\n\t     * across all components use the same underlying watcher, and makes\n\t     * the getter evaluated only once during every flush.\n\t     *\n\t     * @param {Store} store\n\t     * @param {Function} getter\n\t     */\n\t\n\t    function makeComputedGetter(store, getter) {\n\t      var id = store._getterCacheId;\n\t\n\t      // cached\n\t      if (getter[id]) {\n\t        return getter[id];\n\t      }\n\t      var vm = store._vm;\n\t      var Watcher = getWatcher(vm);\n\t      var Dep = getDep(vm);\n\t      var watcher = new Watcher(vm, function (vm) {\n\t        return getter(vm.state);\n\t      }, null, { lazy: true });\n\t      var computedGetter = function computedGetter() {\n\t        if (watcher.dirty) {\n\t          watcher.evaluate();\n\t        }\n\t        if (Dep.target) {\n\t          watcher.depend();\n\t        }\n\t        return watcher.value;\n\t      };\n\t      getter[id] = computedGetter;\n\t      return computedGetter;\n\t    }\n\t\n\t    /**\n\t     * Make a bound-to-store version of a raw action function.\n\t     *\n\t     * @param {Store} store\n\t     * @param {Function} action\n\t     * @param {String} key\n\t     */\n\t\n\t    function makeBoundAction(store, action, key) {\n\t      if (typeof action !== 'function') {\n\t        console.warn('[vuex] Action bound to key \\'vuex.actions.' + key + '\\' is not a function.');\n\t      }\n\t      return function vuexBoundAction() {\n\t        for (var _len = arguments.length, args = Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n\t          args[_key2] = arguments[_key2];\n\t        }\n\t\n\t        return action.call.apply(action, [this, store].concat(args));\n\t      };\n\t    }\n\t\n\t    // option merging\n\t    var merge = Vue.config.optionMergeStrategies.computed;\n\t    Vue.config.optionMergeStrategies.vuex = function (toVal, fromVal) {\n\t      if (!toVal) return fromVal;\n\t      if (!fromVal) return toVal;\n\t      return {\n\t        getters: merge(toVal.getters, fromVal.getters),\n\t        state: merge(toVal.state, fromVal.state),\n\t        actions: merge(toVal.actions, fromVal.actions)\n\t      };\n\t    };\n\t  }\n\t\n\t  var Vue = void 0;\n\t  var uid = 0;\n\t\n\t  var Store = function () {\n\t\n\t    /**\n\t     * @param {Object} options\n\t     *        - {Object} state\n\t     *        - {Object} actions\n\t     *        - {Object} mutations\n\t     *        - {Array} plugins\n\t     *        - {Boolean} strict\n\t     */\n\t\n\t    function Store() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$state = _ref.state;\n\t      var state = _ref$state === undefined ? {} : _ref$state;\n\t      var _ref$mutations = _ref.mutations;\n\t      var mutations = _ref$mutations === undefined ? {} : _ref$mutations;\n\t      var _ref$modules = _ref.modules;\n\t      var modules = _ref$modules === undefined ? {} : _ref$modules;\n\t      var _ref$plugins = _ref.plugins;\n\t      var plugins = _ref$plugins === undefined ? [] : _ref$plugins;\n\t      var _ref$strict = _ref.strict;\n\t      var strict = _ref$strict === undefined ? false : _ref$strict;\n\t      classCallCheck(this, Store);\n\t\n\t      this._getterCacheId = 'vuex_store_' + uid++;\n\t      this._dispatching = false;\n\t      this._rootMutations = this._mutations = mutations;\n\t      this._modules = modules;\n\t      this._subscribers = [];\n\t      // bind dispatch to self\n\t      var dispatch = this.dispatch;\n\t      this.dispatch = function () {\n\t        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t          args[_key] = arguments[_key];\n\t        }\n\t\n\t        dispatch.apply(_this, args);\n\t      };\n\t      // use a Vue instance to store the state tree\n\t      // suppress warnings just in case the user has added\n\t      // some funky global mixins\n\t      if (!Vue) {\n\t        throw new Error('[vuex] must call Vue.use(Vuex) before creating a store instance.');\n\t      }\n\t      var silent = Vue.config.silent;\n\t      Vue.config.silent = true;\n\t      this._vm = new Vue({\n\t        data: {\n\t          state: state\n\t        }\n\t      });\n\t      Vue.config.silent = silent;\n\t      this._setupModuleState(state, modules);\n\t      this._setupModuleMutations(modules);\n\t      // add extra warnings in strict mode\n\t      if (strict) {\n\t        this._setupMutationCheck();\n\t      }\n\t      // apply plugins\n\t      devtoolPlugin(this);\n\t      plugins.forEach(function (plugin) {\n\t        return plugin(_this);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Getter for the entire state tree.\n\t     * Read only.\n\t     *\n\t     * @return {Object}\n\t     */\n\t\n\t    createClass(Store, [{\n\t      key: 'replaceState',\n\t\n\t\n\t      /**\n\t       * Replace root state.\n\t       *\n\t       * @param {Object} state\n\t       */\n\t\n\t      value: function replaceState(state) {\n\t        this._dispatching = true;\n\t        this._vm.state = state;\n\t        this._dispatching = false;\n\t      }\n\t\n\t      /**\n\t       * Dispatch an action.\n\t       *\n\t       * @param {String} type\n\t       */\n\t\n\t    }, {\n\t      key: 'dispatch',\n\t      value: function dispatch(type) {\n\t        var _this2 = this;\n\t\n\t        for (var _len2 = arguments.length, payload = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n\t          payload[_key2 - 1] = arguments[_key2];\n\t        }\n\t\n\t        var silent = false;\n\t        var isObjectStyleDispatch = false;\n\t        // compatibility for object actions, e.g. FSA\n\t        if ((typeof type === 'undefined' ? 'undefined' : _typeof(type)) === 'object' && type.type && arguments.length === 1) {\n\t          isObjectStyleDispatch = true;\n\t          payload = type;\n\t          if (type.silent) silent = true;\n\t          type = type.type;\n\t        }\n\t        var handler = this._mutations[type];\n\t        var state = this.state;\n\t        if (handler) {\n\t          this._dispatching = true;\n\t          // apply the mutation\n\t          if (Array.isArray(handler)) {\n\t            handler.forEach(function (h) {\n\t              isObjectStyleDispatch ? h(state, payload) : h.apply(undefined, [state].concat(toConsumableArray(payload)));\n\t            });\n\t          } else {\n\t            isObjectStyleDispatch ? handler(state, payload) : handler.apply(undefined, [state].concat(toConsumableArray(payload)));\n\t          }\n\t          this._dispatching = false;\n\t          if (!silent) {\n\t            (function () {\n\t              var mutation = isObjectStyleDispatch ? payload : { type: type, payload: payload };\n\t              _this2._subscribers.forEach(function (sub) {\n\t                return sub(mutation, state);\n\t              });\n\t            })();\n\t          }\n\t        } else {\n\t          console.warn('[vuex] Unknown mutation: ' + type);\n\t        }\n\t      }\n\t\n\t      /**\n\t       * Watch state changes on the store.\n\t       * Same API as Vue's $watch, except when watching a function,\n\t       * the function gets the state as the first argument.\n\t       *\n\t       * @param {Function} fn\n\t       * @param {Function} cb\n\t       * @param {Object} [options]\n\t       */\n\t\n\t    }, {\n\t      key: 'watch',\n\t      value: function watch(fn, cb, options) {\n\t        var _this3 = this;\n\t\n\t        if (typeof fn !== 'function') {\n\t          console.error('Vuex store.watch only accepts function.');\n\t          return;\n\t        }\n\t        return this._vm.$watch(function () {\n\t          return fn(_this3.state);\n\t        }, cb, options);\n\t      }\n\t\n\t      /**\n\t       * Subscribe to state changes. Fires after every mutation.\n\t       */\n\t\n\t    }, {\n\t      key: 'subscribe',\n\t      value: function subscribe(fn) {\n\t        var subs = this._subscribers;\n\t        if (subs.indexOf(fn) < 0) {\n\t          subs.push(fn);\n\t        }\n\t        return function () {\n\t          var i = subs.indexOf(fn);\n\t          if (i > -1) {\n\t            subs.splice(i, 1);\n\t          }\n\t        };\n\t      }\n\t\n\t      /**\n\t       * Hot update mutations & modules.\n\t       *\n\t       * @param {Object} options\n\t       *        - {Object} [mutations]\n\t       *        - {Object} [modules]\n\t       */\n\t\n\t    }, {\n\t      key: 'hotUpdate',\n\t      value: function hotUpdate() {\n\t        var _ref2 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t        var mutations = _ref2.mutations;\n\t        var modules = _ref2.modules;\n\t\n\t        this._rootMutations = this._mutations = mutations || this._rootMutations;\n\t        this._setupModuleMutations(modules || this._modules);\n\t      }\n\t\n\t      /**\n\t       * Attach sub state tree of each module to the root tree.\n\t       *\n\t       * @param {Object} state\n\t       * @param {Object} modules\n\t       */\n\t\n\t    }, {\n\t      key: '_setupModuleState',\n\t      value: function _setupModuleState(state, modules) {\n\t        var _this4 = this;\n\t\n\t        if (!isObject(modules)) return;\n\t\n\t        Object.keys(modules).forEach(function (key) {\n\t          var module = modules[key];\n\t\n\t          // set this module's state\n\t          Vue.set(state, key, module.state || {});\n\t\n\t          // retrieve nested modules\n\t          _this4._setupModuleState(state[key], module.modules);\n\t        });\n\t      }\n\t\n\t      /**\n\t       * Bind mutations for each module to its sub tree and\n\t       * merge them all into one final mutations map.\n\t       *\n\t       * @param {Object} updatedModules\n\t       */\n\t\n\t    }, {\n\t      key: '_setupModuleMutations',\n\t      value: function _setupModuleMutations(updatedModules) {\n\t        var modules = this._modules;\n\t        Object.keys(updatedModules).forEach(function (key) {\n\t          modules[key] = updatedModules[key];\n\t        });\n\t        var updatedMutations = this._createModuleMutations(modules, []);\n\t        this._mutations = mergeObjects([this._rootMutations].concat(toConsumableArray(updatedMutations)));\n\t      }\n\t\n\t      /**\n\t       * Helper method for _setupModuleMutations.\n\t       * The method retrieve nested sub modules and\n\t       * bind each mutations to its sub tree recursively.\n\t       *\n\t       * @param {Object} modules\n\t       * @param {Array<String>} nestedKeys\n\t       * @return {Array<Object>}\n\t       */\n\t\n\t    }, {\n\t      key: '_createModuleMutations',\n\t      value: function _createModuleMutations(modules, nestedKeys) {\n\t        var _this5 = this;\n\t\n\t        if (!isObject(modules)) return [];\n\t\n\t        return Object.keys(modules).map(function (key) {\n\t          var module = modules[key];\n\t          var newNestedKeys = nestedKeys.concat(key);\n\t\n\t          // retrieve nested modules\n\t          var nestedMutations = _this5._createModuleMutations(module.modules, newNestedKeys);\n\t\n\t          if (!module || !module.mutations) {\n\t            return mergeObjects(nestedMutations);\n\t          }\n\t\n\t          // bind mutations to sub state tree\n\t          var mutations = {};\n\t          Object.keys(module.mutations).forEach(function (name) {\n\t            var original = module.mutations[name];\n\t            mutations[name] = function (state) {\n\t              for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n\t                args[_key3 - 1] = arguments[_key3];\n\t              }\n\t\n\t              original.apply(undefined, [getNestedState(state, newNestedKeys)].concat(args));\n\t            };\n\t          });\n\t\n\t          // merge mutations of this module and nested modules\n\t          return mergeObjects([mutations].concat(toConsumableArray(nestedMutations)));\n\t        });\n\t      }\n\t\n\t      /**\n\t       * Setup mutation check: if the vuex instance's state is mutated\n\t       * outside of a mutation handler, we throw en error. This effectively\n\t       * enforces all mutations to the state to be trackable and hot-reloadble.\n\t       * However, this comes at a run time cost since we are doing a deep\n\t       * watch on the entire state tree, so it is only enalbed with the\n\t       * strict option is set to true.\n\t       */\n\t\n\t    }, {\n\t      key: '_setupMutationCheck',\n\t      value: function _setupMutationCheck() {\n\t        var _this6 = this;\n\t\n\t        var Watcher = getWatcher(this._vm);\n\t        /* eslint-disable no-new */\n\t        new Watcher(this._vm, 'state', function () {\n\t          if (!_this6._dispatching) {\n\t            throw new Error('[vuex] Do not mutate vuex store state outside mutation handlers.');\n\t          }\n\t        }, { deep: true, sync: true });\n\t        /* eslint-enable no-new */\n\t      }\n\t    }, {\n\t      key: 'state',\n\t      get: function get() {\n\t        return this._vm.state;\n\t      },\n\t      set: function set(v) {\n\t        throw new Error('[vuex] Use store.replaceState() to explicit replace store state.');\n\t      }\n\t    }]);\n\t    return Store;\n\t  }();\n\t\n\t  function install(_Vue) {\n\t    if (Vue) {\n\t      console.warn('[vuex] already installed. Vue.use(Vuex) should be called only once.');\n\t      return;\n\t    }\n\t    Vue = _Vue;\n\t    override(Vue);\n\t  }\n\t\n\t  // auto install in dist mode\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    install(window.Vue);\n\t  }\n\t\n\t  var index = {\n\t    Store: Store,\n\t    install: install\n\t  };\n\t\n\t  return index;\n\t\n\t}));\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** build.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/_source\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7f948d8eb029091524e1\n **/","import Vue          from 'vue'\r\nimport VueResource  from 'vue-resource'\r\nimport Vuex         from 'vuex'\r\n\r\nimport JmNav        from './components/jm-1-nav.vue'\r\nimport JmTopBanner  from './components/jm-2-top-banner.vue'\r\nimport JmColluns    from './components/jm-3-colluns.vue'\r\nimport JmMidBanner  from './components/jm-4-mid-banner.vue'\r\nimport JmContact    from './components/jm-5-contact.vue'\r\nimport JmFootBanner from './components/jm-6-foot-banner.vue'\r\nimport JmFooter     from './components/jm-7-footer.vue'\r\nimport Modal        from './components/jm-8-modal.vue'\r\n\r\nVue.use(VueResource)\r\nVue.use(Vuex)\r\n\r\nexport const state = {\r\n\r\n   Modal:{}\r\n}\r\n\r\n//Define duas matations (Aconselhável separar num arquivo a parte)\r\nexport const mutations = {\r\n\r\n    ATUALIZA_MODAL (state, obj) {\r\n      state.Modal = obj\r\n    },\r\n    OK_CLICK (state, obj) {\r\n          console.table(obj)\r\n          if(obj.tipo === 'DOWNLOAD'){\r\n                \r\n                if(!obj.senha)\r\n                    return\r\n\r\n                let address = \"/arquivos/Juscilan_Moreto-11-98167-1595.pdf/\" + obj.senha;\r\n\r\n                window.location = address;\r\n          }\r\n    },    \r\n}\r\n\r\nnew Vue({\r\n  el: 'body',\r\n  components: { \r\n                  JmNav\r\n                  ,JmTopBanner \r\n                  ,JmColluns\r\n                  ,JmMidBanner\r\n                  ,JmContact\r\n                  ,JmFootBanner\r\n                  ,JmFooter\r\n                  ,Modal        \r\n              }\r\n  \r\n  ,store:  new Vuex.Store({\r\n                            state,\r\n                            mutations,\r\n                            strict: true // impede que altere o state diretamente, retirar em produção (Afeta Performance)\r\n                        })\r\n})\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/core-js/json/stringify.js\n ** module id = 1\n ** module chunks = 0\n **/","export const scroll = function(element){\r\n        var doc = jQuery('html, body');\r\n        jQuery('.' + element).click(function() {\r\n            doc.animate({\r\n                scrollTop: jQuery( jQuery.attr(this, 'href') ).offset().top\r\n            }, 1000);\r\n            return false;\r\n        });        \r\n    }  \n\n\n/** WEBPACK FOOTER **\n ** ./src/components/jm-9-scrool.js\n **/","<template>\r\n  <span id=\"forkongithub\" class=\"hide-on-med-and-down\"><a href=\"https://github.com/juscilan\">Fork me on GitHub</a></span> \r\n  <nav class=\"white\" id=\"nav\">\r\n      <div class=\"nav-wrapper container\">\r\n        <a id=\"logo-container\" href=\"/\" class=\"brand-logo\"><img src=\"https://media.licdn.com/mpr/mpr/shrink_100_100/p/7/005/08d/09b/109529d.jpg\" class=\"circle bordabranca\" alt=\"Juscilan Moreto\" title=\"Juscilan Moreto\"></a>\r\n        <a href=\"#\" data-activates=\"mobile-demo\" class=\"button-collapse\"><i class=\"material-icons\">menu</i></a>\r\n        <ul class=\"right hide-on-med-and-down\">\r\n            <li><a href=\"#\" @click=\"executa()\">Curriculum em PDF</a></li>\r\n            <li><a href=\"#contato\" class=\"scrollSuave\">Contato</a></li>\r\n            <li><a href=\"#sobre\" class=\"scrollSuave\">  Sobre</a></li>\r\n        </ul>\r\n        <ul class=\"side-nav\" id=\"mobile-demo\">\r\n            <li><a href=\"#contato\">Contato</a></li>\r\n            <li><a href=\"#sobre\">Sobre</a></li>\r\n        </ul>\r\n      </div>\r\n  </nav>   \r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport {scroll} from './jm-9-scrool'\r\n\r\nexport default {\r\n\r\n    vuex:{\r\n              actions:{\r\n                  \r\n                  executa : function ({dispatch}) {\r\n                      let data = JSON.parse(JSON.stringify(this.$data));\r\n                      dispatch('ATUALIZA_MODAL',data)\r\n                      jQuery('#modal1').openModal();\r\n                  }\r\n              },\r\n                getters: {\r\n                    getValue : store => store.Modal\r\n                \r\n                }              \r\n\r\n   },\r\n\r\n  data () {\r\n    return {\r\n      titulo: 'Atenção'\r\n      ,mensagem :'Por gentileza digite sua senha:'\r\n      ,tipo :'DOWNLOAD'\r\n      ,inputvisible:true\r\n    }\r\n  },\r\n    ready () {\r\n        scroll(\"scrollSuave\")\r\n    },\r\n    methods:{\r\n      baixar(){\r\n        jQuery('#modal1').openModal();\r\n      }\r\n    }  \r\n}\r\n</script>\n\n\n/** WEBPACK FOOTER **\n ** jm-1-nav.vue?4f104c7a\n **/","<template>\r\n    <h5 class=\"header center teal-text text-lighten hide-on-med-and-down\"> www.juscilan.com </h5>\r\n    <div id=\"index-banner\" class=\"parallax-container\">\r\n        <div class=\"section no-pad-bot\">\r\n          <div class=\"container\">\r\n              <div class=\"row center \" style=\"margin-top:85px\">\r\n                <h5 class=\"header col s12 light-image center\">Desenvolvimento</h5>\r\n                <h5 class=\"header col s12 light-image center\">de soluções  </h5>\r\n                <h5 class=\"header col s12 light-image center\">em software.</h5>\r\n              </div>\r\n              <br><br>\r\n          </div>\r\n        </div>\r\n        <div class=\"parallax\"><img src=\"/img/topo.jpg\" alt=\"\"></div>\r\n    </div>\r\n    <h5 class=\"header center teal-text text-lighten \">\"think before, then do.\"</h5>      \r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      msg: ''\r\n    }\r\n  }\r\n}\r\n</script>\n\n\n/** WEBPACK FOOTER **\n ** jm-2-top-banner.vue?7216bc21\n **/","<template>\r\n    <div class=\"container\">\r\n        <div class=\"section\">\r\n        </div>\r\n        <div class=\"section\">\r\n          <div class=\"row\">\r\n              <div class=\"col s12 m4\">\r\n                <div class=\"icon-block\">\r\n                    <h2 class=\"center black-text\"><i class=\"material-icons\">phonelink_ring</i></h2>\r\n                    <h5 class=\"center\">Aplicativos Mobile</h5>\r\n                    <p class=\"light\">Desenvolvimento de apps Android <a href=\"https://play.google.com/store/apps/developer?id=Juscilan+Moreto\" >Google&copy</a> utilizando a linguagem Java&copy AsyncTask com integração de Api´s em json, otimizando consumo de banda e recursos do device.</p>\r\n                </div>\r\n              </div>\r\n              <div class=\"col s12 m4\">\r\n                <div class=\"icon-block\">\r\n                    <h2 class=\"center black-text\"><i class=\"material-icons\">shopping_cart</i></h2>\r\n                    <h5 class=\"center\">E-commerce</h5>\r\n                    <p class=\"light\">Experiências em manutenção de ERP com integração da parte de faturamento e emissão de Nfe. Consumo e disponibilização de serviços e webservices, tanto <b>SOAP</b> <br> &ltXML&gt quanto <b>RESTful</b> {json}.</p>\r\n                </div>\r\n              </div>\r\n              <div class=\"col s12 m4\">\r\n                <div class=\"icon-block\">\r\n                    <h2 class=\"center black-text\"><i class=\"material-icons\">comment</i></h2>\r\n                    <h5 class=\"center\">Artigos</h5>\r\n                    <p class=\"light\">\r\n                      <a href=\"https://www.linkedin.com/pulse/import%C3%A2ncia-de-se-ter-um-site-responsivo-juscilan-moreto?trk=pulse_spock-articles\">A importância de um site responsivo.</a>\r\n                      <br>\r\n                      <a href=\"https://www.linkedin.com/pulse/efici%C3%AAncia-x-efic%C3%A1cia-mais-um-round-juscilan-moreto?trk=pulse_spock-articles\">Eficiência X Eficácia - Mais um round!</a>\r\n                      <br>\r\n                      <a href=\"https://medium.com/@Juscilan/nodejs-com-socket-io-e-arduino-30f4922566f9#.wq254047d\"> NodeJs Socket Arduino </a>\r\n                    </p>\r\n                </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n            \r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      msg: ''\r\n    }\r\n  }\r\n}\r\n</script>\n\n\n/** WEBPACK FOOTER **\n ** jm-3-colluns.vue?bcbaa60e\n **/","<template>\r\n      \r\n    <div class=\"parallax-container valign-wrapper\">\r\n        <div class=\"section no-pad-bot\">\r\n          <div class=\"container\">\r\n              <div class=\"row center\">\r\n                <h5 class=\"header col s12 light-image center\">Html5, Css e Javascript</h5>\r\n              </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"parallax\"><img src=\"/img/meio.jpg\" alt=\"\"></div>\r\n    </div>\r\n            \r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      msg: ''\r\n    }\r\n  }\r\n}\r\n</script>\n\n\n/** WEBPACK FOOTER **\n ** jm-4-mid-banner.vue?3dc2c810\n **/","<template>\r\n    <!-- Modal Structure -->\r\n    <div>\r\n      <div id=\"contato\" class=\"section\" >\r\n          <div class=\"row\">\r\n            <div class=\"col s12 center\" >\r\n                <h4>Formulário para contato</h4>\r\n                <form class=\"col s12\" >\r\n                  <div class=\"row\">\r\n                      <div class=\"input-field col s12\">\r\n                        <input id=\"name\"  type=\"text\" class=\"validate\" v-model=\"dados.name\">\r\n                        <label for=\"first_name\">Nome</label>\r\n                      </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                      <div class=\"input-field col s12\">\r\n                        <input id=\"email\" type=\"text\" class=\"validate\" v-model=\"dados.email\">\r\n                        <label for=\"email\">Email</label>\r\n                      </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                      <div class=\"input-field col s12\">\r\n                        <input id=\"mensagem\" type=\"text\" class=\"validate\" v-model=\"dados.mensagem\">\r\n                        <label for=\"first_name\">Mensagem</label>\r\n                      </div>\r\n                  </div>\r\n                  <div class=\"row\"> \r\n                      <button @click=\"enviar($event)\" class=\"btn waves-effect waves-light\" \r\n                         name=\"action\">Enviar<i class=\"material-icons right\">send</i>\r\n                      </button>\r\n                  </div>\r\n                </form>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\r\n    vuex:{\r\n              actions:{\r\n                  \r\n                  executa : function ({dispatch}) {\r\n                      let data = JSON.parse(JSON.stringify(this.$data.data));\r\n                      dispatch('ATUALIZA_MODAL',data)\r\n                      jQuery('#modal1').openModal();\r\n                  }\r\n              },\r\n\r\n   },\r\n\r\n  data () {\r\n    return {\r\n\r\n        data:{\r\n            titulo: ''\r\n            ,mensagem :''\r\n            ,tipo :''\r\n            ,inputvisible:false\r\n        },\r\n        \r\n        dados:{\r\n          name: ''\r\n          ,email: ''\r\n          ,mensagem: ''\r\n          \r\n        }\r\n\r\n    }\r\n  },\r\n\r\n  methods:{\r\n\r\n    enviar(event){\r\n        \r\n        event.preventDefault()\r\n\r\n            var config = {\r\n                headers : {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                }\r\n            }\r\n\r\n        //Valida preenchimento\r\n        if(this.dados.name === \"\" || this.dados.email === \"\" || this.dados.mensagem === \"\"){\r\n            this.$data.data = {\r\n                titulo: 'Atenção'\r\n                ,mensagem :'Todos os campos são obrigatórios ;)'\r\n                ,tipo :'WARNING'\r\n                ,inputvisible:false\r\n            }\r\n            this.executa()\r\n            return;            \r\n        }            \r\n        \r\n        var dados = 'dados=' + JSON.stringify(this.dados);\r\n\r\n        this.$http.post('/email',dados,config).then((response) => {\r\n            this.$data.data = {\r\n                titulo: 'Mensagem enviada'\r\n                ,mensagem :'Logo, logo entro em contato ;)'\r\n                ,tipo :'WARNING'\r\n                ,inputvisible:false\r\n            }\r\n            this.executa()\r\n            \r\n        }, (response) => {\r\n            this.$data.data = {\r\n                titulo: 'Erro ao enviar'\r\n                ,mensagem :'Por gentileza tente novamente ;('\r\n                ,tipo :'WARNING'\r\n                ,inputvisible:false\r\n            }\r\n            this.executa()\r\n        });      \r\n    }\r\n  }\r\n}\r\n</script>\n\n\n/** WEBPACK FOOTER **\n ** jm-5-contact.vue?5ec45496\n **/","<template>\r\n    <div class=\"parallax-container valign-wrapper\">\r\n        <div class=\"section no-pad-bot\">\r\n          <div class=\"container\">\r\n              <div class=\"row center\">\r\n                <h5 class=\"header col s12 light-image\"> Node.js, Asp.NET MVC, Python ...</h5>\r\n              </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"parallax\"><img src=\"/img/rodape.jpg\" alt=\"\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      msg: ''\r\n    }\r\n  }\r\n}\r\n</script>\n\n\n/** WEBPACK FOOTER **\n ** jm-6-foot-banner.vue?7ae6a677\n **/","<template>\r\n    <footer id=\"qq\" class=\"page-footer teal\">\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class=\"col l6 s12\">\r\n                <h5 id=\"sobre\" class=\"white-text\">Mais sobre mim...</h5>\r\n                <p class=\"grey-text text-lighten-4\">\r\n                    Meu nome é Juscilan Moreto, sou graduado em Análise e desenvolvimento de \r\n                    sistemas, ajudei a desenvolver e implantar softwares em grandes empresas como Carrefour, \r\n                    Alpargatas, Bematech, Leroy Merlin e PRODESP, possuo vasta experiência em testes, \r\n                    análise, modelagem, desenvolvimento dos mais variados tipos de sistemas. \r\n                    Focando no desenvolvimento de sistemas para Web/Intranet como Asp.NET MVC, C#, SqlServer e Oracle \r\n                    e também tecnologias Full-Stack Javascript (MongoDB, Express.js, Vue.js e Node.js).\r\n                </p>\r\n                </div>\r\n                <div class=\"col l3 s12\">\r\n                <h5 class=\"white-text\">Social</h5>\r\n                <ul>\r\n                    <li><a class=\"white-text\" href=\"https://br.linkedin.com/in/juscilan-moreto-8815641b\">Linkedin</a></li>\r\n                    <li><a class=\"white-text\" href=\"http://twitter.com/juscilan\">Twitter</a></li>\r\n                    <li><a class=\"white-text\" href=\"https://www.facebook.com/jota.moreto?hc_location=ufi\">Facebook</a></li>\r\n                    <li><a class=\"white-text\" href=\"http://Github.com/juscilan\">Github</a></li>\r\n                </ul>\r\n                </div>\r\n                <div class=\"col l3 s12\">\r\n                <h5 class=\"white-text\">Meus contatos</h5>\r\n                <ul>\r\n                    <li><a class=\"white-text\" href=\"#\">+55 11 98167-1595</a></li>\r\n                    <li><a class=\"white-text\" href=\"mailto:juscilan@gmail.com\">juscilan@gmail.com</a></li>\r\n                    <li><a class=\"white-text\" href=\"#\">Skype: mjuscilan</a></li>\r\n                </ul>\r\n                <h5 class=\"white-text\">Google Play Store</h5>\r\n                <ul>\r\n                    <li><a class=\"white-text\" href=\"https://play.google.com/store/apps/developer?id=Juscilan+Moreto\">Aplicativos Android publicados</a></li>\r\n                </ul>\r\n                <p class=\"grey-text text-lighten-4\">\r\n                    &copy; 2016 - juscilan.com </a>\r\n                </p>\r\n                </div>\r\n            </div> \r\n        </div>\r\n        <div>\r\n            <div class=\"center\"><a class=\"white-text scrollSuave\" href=\"#nav\">Topo</a></div>\r\n        </div>\r\n        <div class=\"footer-copyright\">\r\n            <div class=\"container\">\r\n                <p class=\"center header col s12 light\">Versão 3.0.0.0 - <span>{{counter.visitors}}</span> </p>\r\n            </div>\r\n        </div>\r\n        \r\n    </footer>\r\n</template>\r\n\r\n<script>\r\n\r\nimport {scroll} from './jm-9-scrool'\r\n\r\nexport default {\r\n\r\n    name:'footer-component',\r\n\r\n    data () {\r\n    return {\r\n        counter: {}\r\n        }\r\n    },\r\n\r\n    methods: {\r\n\r\n    },  \r\n\r\n    ready () {\r\n\r\n        scroll(\"scrollSuave\")\r\n/*\r\n        this.$http.get('/counter').then((response) => {\r\n            this.$set('counter', JSON.parse(response.body));\r\n            \r\n        }, (response) => {\r\n            window.console.log('Erro ao realizar operação.');\r\n        });*/\r\n    }\r\n}\r\n</script>\n\n\n/** WEBPACK FOOTER **\n ** jm-7-footer.vue?1c2664a6\n **/","<template>\r\n<div id=\"modal1\" class=\"modal\">\r\n    <div class=\"modal-content\">\r\n        <h4 >{{getValue.titulo}}</h4>\r\n        <p> {{getValue.mensagem}}</p>\r\n        <input id=\"senhaModal\" v-show=\"getValue.inputvisible\" autofocus type=\"password\" v-model=\"senha\" >\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button id=\"closeModal\" class=\"modal-action modal-close waves-effect waves-green btn\" @click=\"ok()\" >Ok</button>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\r\n    vuex:{\r\n\r\n              actions:{\r\n                  \r\n                  executa : function ({dispatch}) {\r\n                    \r\n                      this.$data.tipo = 'DOWNLOAD'\r\n                      let data = JSON.parse(JSON.stringify(this.$data));\r\n                      dispatch('OK_CLICK',data)\r\n                  }\r\n              },        \r\n                getters: {\r\n                    getValue : store => store.Modal\r\n                \r\n                }\r\n            }\r\n  ,\r\n  data () {\r\n    return {\r\n      titulo: ''\r\n      ,mensagem: ''\r\n      ,tipo: ''\r\n      ,senha:''\r\n      ,inputvisible:true\r\n    }\r\n  },\r\n\r\n    ready () {\r\n        this.senha = ''\r\n        this.data = this.getValue \r\n    },\r\n\r\n    methods:{\r\n      ok(){\r\n\r\n          this.executa()\r\n          jQuery('#modal1').closeModal();\r\n      }\r\n    }\r\n\r\n}\r\n</script>\n\n\n/** WEBPACK FOOTER **\n ** jm-8-modal.vue?8ccb1566\n **/","module.exports = \" <span id=forkongithub class=hide-on-med-and-down><a href=https://github.com/juscilan>Fork me on GitHub</a></span> <nav class=white id=nav> <div class=\\\"nav-wrapper container\\\"> <a id=logo-container href=/ class=brand-logo><img src=https://media.licdn.com/mpr/mpr/shrink_100_100/p/7/005/08d/09b/109529d.jpg class=\\\"circle bordabranca\\\" alt=\\\"Juscilan Moreto\\\" title=\\\"Juscilan Moreto\\\"></a> <a href=# data-activates=mobile-demo class=button-collapse><i class=material-icons>menu</i></a> <ul class=\\\"right hide-on-med-and-down\\\"> <li><a href=# @click=executa()>Curriculum em PDF</a></li> <li><a href=#contato class=scrollSuave>Contato</a></li> <li><a href=#sobre class=scrollSuave> Sobre</a></li> </ul> <ul class=side-nav id=mobile-demo> <li><a href=#contato>Contato</a></li> <li><a href=#sobre>Sobre</a></li> </ul> </div> </nav> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** C:/Temp/Node/juscilan.com/public/~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/jm-1-nav.vue\n ** module id = 11\n ** module chunks = 0\n **/","module.exports = \" <h5 class=\\\"header center teal-text text-lighten hide-on-med-and-down\\\"> www.juscilan.com </h5> <div id=index-banner class=parallax-container> <div class=\\\"section no-pad-bot\\\"> <div class=container> <div class=\\\"row center\\\" style=margin-top:85px> <h5 class=\\\"header col s12 light-image center\\\">Desenvolvimento</h5> <h5 class=\\\"header col s12 light-image center\\\">de soluções </h5> <h5 class=\\\"header col s12 light-image center\\\">em software.</h5> </div> <br><br> </div> </div> <div class=parallax><img src=/img/topo.jpg alt=\\\"\\\"></div> </div> <h5 class=\\\"header center teal-text text-lighten\\\">\\\"think before, then do.\\\"</h5> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** C:/Temp/Node/juscilan.com/public/~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/jm-2-top-banner.vue\n ** module id = 12\n ** module chunks = 0\n **/","module.exports = \" <div class=container> <div class=section> </div> <div class=section> <div class=row> <div class=\\\"col s12 m4\\\"> <div class=icon-block> <h2 class=\\\"center black-text\\\"><i class=material-icons>phonelink_ring</i></h2> <h5 class=center>Aplicativos Mobile</h5> <p class=light>Desenvolvimento de apps Android <a href=\\\"https://play.google.com/store/apps/developer?id=Juscilan+Moreto\\\">Google&copy</a> utilizando a linguagem Java&copy AsyncTask com integração de Api´s em json, otimizando consumo de banda e recursos do device.</p> </div> </div> <div class=\\\"col s12 m4\\\"> <div class=icon-block> <h2 class=\\\"center black-text\\\"><i class=material-icons>shopping_cart</i></h2> <h5 class=center>E-commerce</h5> <p class=light>Experiências em manutenção de ERP com integração da parte de faturamento e emissão de Nfe. Consumo e disponibilização de serviços e webservices, tanto <b>SOAP</b> <br> &ltXML&gt quanto <b>RESTful</b> {json}.</p> </div> </div> <div class=\\\"col s12 m4\\\"> <div class=icon-block> <h2 class=\\\"center black-text\\\"><i class=material-icons>comment</i></h2> <h5 class=center>Artigos</h5> <p class=light> <a href=\\\"https://www.linkedin.com/pulse/import%C3%A2ncia-de-se-ter-um-site-responsivo-juscilan-moreto?trk=pulse_spock-articles\\\">A importância de um site responsivo.</a> <br> <a href=\\\"https://www.linkedin.com/pulse/efici%C3%AAncia-x-efic%C3%A1cia-mais-um-round-juscilan-moreto?trk=pulse_spock-articles\\\">Eficiência X Eficácia - Mais um round!</a> <br> <a href=https://medium.com/@Juscilan/nodejs-com-socket-io-e-arduino-30f4922566f9#.wq254047d> NodeJs Socket Arduino </a> </p> </div> </div> </div> </div> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** C:/Temp/Node/juscilan.com/public/~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/jm-3-colluns.vue\n ** module id = 13\n ** module chunks = 0\n **/","module.exports = \" <div class=\\\"parallax-container valign-wrapper\\\"> <div class=\\\"section no-pad-bot\\\"> <div class=container> <div class=\\\"row center\\\"> <h5 class=\\\"header col s12 light-image center\\\">Html5, Css e Javascript</h5> </div> </div> </div> <div class=parallax><img src=/img/meio.jpg alt=\\\"\\\"></div> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** C:/Temp/Node/juscilan.com/public/~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/jm-4-mid-banner.vue\n ** module id = 14\n ** module chunks = 0\n **/","module.exports = \" <div> <div id=contato class=section> <div class=row> <div class=\\\"col s12 center\\\"> <h4>Formulário para contato</h4> <form class=\\\"col s12\\\"> <div class=row> <div class=\\\"input-field col s12\\\"> <input id=name type=text class=validate v-model=dados.name> <label for=first_name>Nome</label> </div> </div> <div class=row> <div class=\\\"input-field col s12\\\"> <input id=email type=text class=validate v-model=dados.email> <label for=email>Email</label> </div> </div> <div class=row> <div class=\\\"input-field col s12\\\"> <input id=mensagem type=text class=validate v-model=dados.mensagem> <label for=first_name>Mensagem</label> </div> </div> <div class=row> <button @click=enviar($event) class=\\\"btn waves-effect waves-light\\\" name=action>Enviar<i class=\\\"material-icons right\\\">send</i> </button> </div> </form> </div> </div> </div> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** C:/Temp/Node/juscilan.com/public/~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/jm-5-contact.vue\n ** module id = 15\n ** module chunks = 0\n **/","module.exports = \" <div class=\\\"parallax-container valign-wrapper\\\"> <div class=\\\"section no-pad-bot\\\"> <div class=container> <div class=\\\"row center\\\"> <h5 class=\\\"header col s12 light-image\\\"> Node.js, Asp.NET MVC, Python ...</h5> </div> </div> </div> <div class=parallax><img src=/img/rodape.jpg alt=\\\"\\\"></div> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** C:/Temp/Node/juscilan.com/public/~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/jm-6-foot-banner.vue\n ** module id = 16\n ** module chunks = 0\n **/","module.exports = \" <footer id=qq class=\\\"page-footer teal\\\"> <div class=container> <div class=row> <div class=\\\"col l6 s12\\\"> <h5 id=sobre class=white-text>Mais sobre mim...</h5> <p class=\\\"grey-text text-lighten-4\\\"> Meu nome é Juscilan Moreto, sou graduado em Análise e desenvolvimento de sistemas, ajudei a desenvolver e implantar softwares em grandes empresas como Carrefour, Alpargatas, Bematech, Leroy Merlin e PRODESP, possuo vasta experiência em testes, análise, modelagem, desenvolvimento dos mais variados tipos de sistemas. Focando no desenvolvimento de sistemas para Web/Intranet como Asp.NET MVC, C#, SqlServer e Oracle e também tecnologias Full-Stack Javascript (MongoDB, Express.js, Vue.js e Node.js). </p> </div> <div class=\\\"col l3 s12\\\"> <h5 class=white-text>Social</h5> <ul> <li><a class=white-text href=https://br.linkedin.com/in/juscilan-moreto-8815641b>Linkedin</a></li> <li><a class=white-text href=http://twitter.com/juscilan>Twitter</a></li> <li><a class=white-text href=\\\"https://www.facebook.com/jota.moreto?hc_location=ufi\\\">Facebook</a></li> <li><a class=white-text href=http://Github.com/juscilan>Github</a></li> </ul> </div> <div class=\\\"col l3 s12\\\"> <h5 class=white-text>Meus contatos</h5> <ul> <li><a class=white-text href=#>+55 11 98167-1595</a></li> <li><a class=white-text href=mailto:juscilan@gmail.com>juscilan@gmail.com</a></li> <li><a class=white-text href=#>Skype: mjuscilan</a></li> </ul> <h5 class=white-text>Google Play Store</h5> <ul> <li><a class=white-text href=\\\"https://play.google.com/store/apps/developer?id=Juscilan+Moreto\\\">Aplicativos Android publicados</a></li> </ul> <p class=\\\"grey-text text-lighten-4\\\"> &copy; 2016 - juscilan.com  </p> </div> </div> </div> <div> <div class=center><a class=\\\"white-text scrollSuave\\\" href=#nav>Topo</a></div> </div> <div class=footer-copyright> <div class=container> <p class=\\\"center header col s12 light\\\">Versão 3.0.0.0 - <span>{{counter.visitors}}</span> </p> </div> </div> </footer> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** C:/Temp/Node/juscilan.com/public/~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/jm-7-footer.vue\n ** module id = 17\n ** module chunks = 0\n **/","module.exports = \" <div id=modal1 class=modal> <div class=modal-content> <h4>{{getValue.titulo}}</h4> <p> {{getValue.mensagem}}</p> <input id=senhaModal v-show=getValue.inputvisible autofocus type=password v-model=senha> </div> <div class=modal-footer> <button id=closeModal class=\\\"modal-action modal-close waves-effect waves-green btn\\\" @click=ok()>Ok</button> </div> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** C:/Temp/Node/juscilan.com/public/~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/jm-8-modal.vue\n ** module id = 18\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./jm-1-nav.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./jm-1-nav.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/jm-1-nav.vue\n ** module id = 19\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./jm-2-top-banner.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./jm-2-top-banner.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/jm-2-top-banner.vue\n ** module id = 20\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./jm-3-colluns.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./jm-3-colluns.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/jm-3-colluns.vue\n ** module id = 21\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./jm-4-mid-banner.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./jm-4-mid-banner.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/jm-4-mid-banner.vue\n ** module id = 22\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./jm-5-contact.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./jm-5-contact.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/jm-5-contact.vue\n ** module id = 23\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./jm-6-foot-banner.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./jm-6-foot-banner.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/jm-6-foot-banner.vue\n ** module id = 24\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./jm-7-footer.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./jm-7-footer.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/jm-7-footer.vue\n ** module id = 25\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./jm-8-modal.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./jm-8-modal.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/jm-8-modal.vue\n ** module id = 26\n ** module chunks = 0\n **/","var core  = require('../../modules/_core')\n  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});\nmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/fn/json/stringify.js\n ** module id = 27\n ** module chunks = 0\n **/","var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_core.js\n ** module id = 28\n ** module chunks = 0\n **/","/*!\n * vue-resource v0.9.3\n * https://github.com/vuejs/vue-resource\n * Released under the MIT License.\n */\n\n'use strict';\n\n/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING = 2;\n\nfunction Promise$2(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise$2.reject = function (r) {\n    return new Promise$2(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise$2.resolve = function (x) {\n    return new Promise$2(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise$2.all = function all(iterable) {\n    return new Promise$2(function (resolve, reject) {\n        var count = 0,\n            result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$2.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise$2.race = function race(iterable) {\n    return new Promise$2(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$2.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p$1 = Promise$2.prototype;\n\np$1.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np$1.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np$1.notify = function notify() {\n    var promise = this;\n\n    nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np$1.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise$2(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np$1.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\nvar PromiseObj = window.Promise || Promise$2;\n\nfunction Promise$1(executor, context) {\n\n    if (executor instanceof PromiseObj) {\n        this.promise = executor;\n    } else {\n        this.promise = new PromiseObj(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromise$1.all = function (iterable, context) {\n    return new Promise$1(PromiseObj.all(iterable), context);\n};\n\nPromise$1.resolve = function (value, context) {\n    return new Promise$1(PromiseObj.resolve(value), context);\n};\n\nPromise$1.reject = function (reason, context) {\n    return new Promise$1(PromiseObj.reject(reason), context);\n};\n\nPromise$1.race = function (iterable, context) {\n    return new Promise$1(PromiseObj.race(iterable), context);\n};\n\nvar p = Promise$1.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new Promise$1(this.promise.then(fulfilled, rejected), this.context);\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new Promise$1(this.promise.catch(rejected), this.context);\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n        callback.call(this);\n        return value;\n    }, function (reason) {\n        callback.call(this);\n        return PromiseObj.reject(reason);\n    });\n};\n\nvar debug = false;\nvar util = {};\nvar array = [];\nfunction Util (Vue) {\n    util = Vue.util;\n    debug = Vue.config.debug || !Vue.config.silent;\n}\n\nfunction warn(msg) {\n    if (typeof console !== 'undefined' && debug) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n}\n\nfunction error(msg) {\n    if (typeof console !== 'undefined') {\n        console.error(msg);\n    }\n}\n\nfunction nextTick(cb, ctx) {\n    return util.nextTick(cb, ctx);\n}\n\nfunction trim(str) {\n    return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nvar isArray = Array.isArray;\n\nfunction isString(val) {\n    return typeof val === 'string';\n}\n\nfunction isBoolean(val) {\n    return val === true || val === false;\n}\n\nfunction isFunction(val) {\n    return typeof val === 'function';\n}\n\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\n\nfunction isPlainObject(obj) {\n    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n}\n\nfunction isFormData(obj) {\n    return typeof FormData !== 'undefined' && obj instanceof FormData;\n}\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = Promise$1.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n\nfunction options(fn, obj, opts) {\n\n    opts = opts || {};\n\n    if (isFunction(opts)) {\n        opts = opts.call(obj);\n    }\n\n    return merge(fn.bind({ $vm: obj, $options: opts }), fn, { $options: opts });\n}\n\nfunction each(obj, iterator) {\n\n    var i, key;\n\n    if (typeof obj.length == 'number') {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (isObject(obj)) {\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n}\n\nvar assign = Object.assign || _assign;\n\nfunction merge(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source, true);\n    });\n\n    return target;\n}\n\nfunction defaults(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n\n        for (var key in source) {\n            if (target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n    });\n\n    return target;\n}\n\nfunction _assign(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source);\n    });\n\n    return target;\n}\n\nfunction _merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (isArray(source[key]) && !isArray(target[key])) {\n                target[key] = [];\n            }\n            _merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\nfunction root (options, next) {\n\n    var url = next(options);\n\n    if (isString(options.root) && !url.match(/^(https?:)?\\//)) {\n        url = options.root + '/' + url;\n    }\n\n    return url;\n}\n\nfunction query (options, next) {\n\n    var urlParams = Object.keys(Url.options.params),\n        query = {},\n        url = next(options);\n\n    each(options.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = Url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n}\n\n/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nfunction expand(url, params, variables) {\n\n    var tmpl = parse(url),\n        expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n}\n\nfunction parse(template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n        variables = [];\n\n    return {\n        vars: variables,\n        expand: function (context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null,\n                        values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n                } else {\n                    return encodeReserved(literal);\n                }\n            });\n        }\n    };\n}\n\nfunction getValues(context, operator, key, modifier) {\n\n    var value = context[key],\n        result = [];\n\n    if (isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            result.push(encodeValue(operator, value[k], k));\n                        }\n                    });\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        tmp.push(encodeValue(operator, value));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(encodeValue(operator, value[k].toString()));\n                        }\n                    });\n                }\n\n                if (isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n}\n\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\n\nfunction isKeyOperator(operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n}\n\nfunction encodeValue(operator, value, key) {\n\n    value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n}\n\nfunction encodeReserved(str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n}\n\nfunction template (options) {\n\n    var variables = [],\n        url = expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n}\n\n/**\n * Service for URL templating.\n */\n\nvar ie = document.documentMode;\nvar el = document.createElement('a');\n\nfunction Url(url, params) {\n\n    var self = this || {},\n        options = url,\n        transform;\n\n    if (isString(url)) {\n        options = { url: url, params: params };\n    }\n\n    options = merge({}, Url.options, self.$options, options);\n\n    Url.transforms.forEach(function (handler) {\n        transform = factory(handler, transform, self.$vm);\n    });\n\n    return transform(options);\n}\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transforms = [template, query, root];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [],\n        escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    if (ie) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options) {\n        return handler.call(vm, options, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = isArray(obj),\n        plain = isPlainObject(obj),\n        hash;\n\n    each(obj, function (value, key) {\n\n        hash = isObject(value) || isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\nfunction xdrClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var xdr = new XDomainRequest(),\n            handler = function (event) {\n\n            var response = request.respondWith(xdr.responseText, {\n                status: xdr.status,\n                statusText: xdr.statusText\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () {\n            return xdr.abort();\n        };\n\n        xdr.open(request.method, request.getUrl(), true);\n        xdr.timeout = 0;\n        xdr.onload = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = function () {};\n        xdr.onprogress = function () {};\n        xdr.send(request.getBody());\n    });\n}\n\nvar ORIGIN_URL = Url.parse(location.href);\nvar SUPPORTS_CORS = 'withCredentials' in new XMLHttpRequest();\n\nfunction cors (request, next) {\n\n    if (!isBoolean(request.crossOrigin) && crossOrigin(request)) {\n        request.crossOrigin = true;\n    }\n\n    if (request.crossOrigin) {\n\n        if (!SUPPORTS_CORS) {\n            request.client = xdrClient;\n        }\n\n        delete request.emulateHTTP;\n    }\n\n    next();\n}\n\nfunction crossOrigin(request) {\n\n    var requestUrl = Url.parse(Url(request));\n\n    return requestUrl.protocol !== ORIGIN_URL.protocol || requestUrl.host !== ORIGIN_URL.host;\n}\n\nfunction body (request, next) {\n\n    if (request.emulateJSON && isPlainObject(request.body)) {\n        request.body = Url.params(request.body);\n        request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n    }\n\n    if (isFormData(request.body)) {\n        delete request.headers['Content-Type'];\n    }\n\n    if (isPlainObject(request.body)) {\n        request.body = JSON.stringify(request.body);\n    }\n\n    next(function (response) {\n\n        var contentType = response.headers['Content-Type'];\n\n        if (isString(contentType) && contentType.indexOf('application/json') === 0) {\n\n            try {\n                response.data = response.json();\n            } catch (e) {\n                response.data = null;\n            }\n        } else {\n            response.data = response.text();\n        }\n    });\n}\n\nfunction jsonpClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var name = request.jsonp || 'callback',\n            callback = '_jsonp' + Math.random().toString(36).substr(2),\n            body = null,\n            handler,\n            script;\n\n        handler = function (event) {\n\n            var status = 0;\n\n            if (event.type === 'load' && body !== null) {\n                status = 200;\n            } else if (event.type === 'error') {\n                status = 404;\n            }\n\n            resolve(request.respondWith(body, { status: status }));\n\n            delete window[callback];\n            document.body.removeChild(script);\n        };\n\n        request.params[name] = callback;\n\n        window[callback] = function (result) {\n            body = JSON.stringify(result);\n        };\n\n        script = document.createElement('script');\n        script.src = request.getUrl();\n        script.type = 'text/javascript';\n        script.async = true;\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n}\n\nfunction jsonp (request, next) {\n\n    if (request.method == 'JSONP') {\n        request.client = jsonpClient;\n    }\n\n    next(function (response) {\n\n        if (request.method == 'JSONP') {\n            response.data = response.json();\n        }\n    });\n}\n\nfunction before (request, next) {\n\n    if (isFunction(request.before)) {\n        request.before.call(this, request);\n    }\n\n    next();\n}\n\n/**\n * HTTP method override Interceptor.\n */\n\nfunction method (request, next) {\n\n    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n        request.headers['X-HTTP-Method-Override'] = request.method;\n        request.method = 'POST';\n    }\n\n    next();\n}\n\nfunction header (request, next) {\n\n    request.method = request.method.toUpperCase();\n    request.headers = assign({}, Http.headers.common, !request.crossOrigin ? Http.headers.custom : {}, Http.headers[request.method.toLowerCase()], request.headers);\n\n    next();\n}\n\n/**\n * Timeout Interceptor.\n */\n\nfunction timeout (request, next) {\n\n    var timeout;\n\n    if (request.timeout) {\n        timeout = setTimeout(function () {\n            request.abort();\n        }, request.timeout);\n    }\n\n    next(function (response) {\n\n        clearTimeout(timeout);\n    });\n}\n\nfunction xhrClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var xhr = new XMLHttpRequest(),\n            handler = function (event) {\n\n            var response = request.respondWith('response' in xhr ? xhr.response : xhr.responseText, {\n                status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug\n                statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText),\n                headers: parseHeaders(xhr.getAllResponseHeaders())\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () {\n            return xhr.abort();\n        };\n\n        xhr.open(request.method, request.getUrl(), true);\n        xhr.timeout = 0;\n        xhr.onload = handler;\n        xhr.onerror = handler;\n\n        if (request.progress) {\n            if (request.method === 'GET') {\n                xhr.addEventListener('progress', request.progress);\n            } else if (/^(POST|PUT)$/i.test(request.method)) {\n                xhr.upload.addEventListener('progress', request.progress);\n            }\n        }\n\n        if (request.credentials === true) {\n            xhr.withCredentials = true;\n        }\n\n        each(request.headers || {}, function (value, header) {\n            xhr.setRequestHeader(header, value);\n        });\n\n        xhr.send(request.getBody());\n    });\n}\n\nfunction parseHeaders(str) {\n\n    var headers = {},\n        value,\n        name,\n        i;\n\n    each(trim(str).split('\\n'), function (row) {\n\n        i = row.indexOf(':');\n        name = trim(row.slice(0, i));\n        value = trim(row.slice(i + 1));\n\n        if (headers[name]) {\n\n            if (isArray(headers[name])) {\n                headers[name].push(value);\n            } else {\n                headers[name] = [headers[name], value];\n            }\n        } else {\n\n            headers[name] = value;\n        }\n    });\n\n    return headers;\n}\n\nfunction Client (context) {\n\n    var reqHandlers = [sendRequest],\n        resHandlers = [],\n        handler;\n\n    if (!isObject(context)) {\n        context = null;\n    }\n\n    function Client(request) {\n        return new Promise$1(function (resolve) {\n\n            function exec() {\n\n                handler = reqHandlers.pop();\n\n                if (isFunction(handler)) {\n                    handler.call(context, request, next);\n                } else {\n                    warn('Invalid interceptor of type ' + typeof handler + ', must be a function');\n                    next();\n                }\n            }\n\n            function next(response) {\n\n                if (isFunction(response)) {\n\n                    resHandlers.unshift(response);\n                } else if (isObject(response)) {\n\n                    resHandlers.forEach(function (handler) {\n                        response = when(response, function (response) {\n                            return handler.call(context, response) || response;\n                        });\n                    });\n\n                    when(response, resolve);\n\n                    return;\n                }\n\n                exec();\n            }\n\n            exec();\n        }, context);\n    }\n\n    Client.use = function (handler) {\n        reqHandlers.push(handler);\n    };\n\n    return Client;\n}\n\nfunction sendRequest(request, resolve) {\n\n    var client = request.client || xhrClient;\n\n    resolve(client(request));\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n/**\n * HTTP Response.\n */\n\nvar Response = function () {\n    function Response(body, _ref) {\n        var url = _ref.url;\n        var headers = _ref.headers;\n        var status = _ref.status;\n        var statusText = _ref.statusText;\n        classCallCheck(this, Response);\n\n\n        this.url = url;\n        this.body = body;\n        this.headers = headers || {};\n        this.status = status || 0;\n        this.statusText = statusText || '';\n        this.ok = status >= 200 && status < 300;\n    }\n\n    Response.prototype.text = function text() {\n        return this.body;\n    };\n\n    Response.prototype.blob = function blob() {\n        return new Blob([this.body]);\n    };\n\n    Response.prototype.json = function json() {\n        return JSON.parse(this.body);\n    };\n\n    return Response;\n}();\n\nvar Request = function () {\n    function Request(options) {\n        classCallCheck(this, Request);\n\n\n        this.method = 'GET';\n        this.body = null;\n        this.params = {};\n        this.headers = {};\n\n        assign(this, options);\n    }\n\n    Request.prototype.getUrl = function getUrl() {\n        return Url(this);\n    };\n\n    Request.prototype.getBody = function getBody() {\n        return this.body;\n    };\n\n    Request.prototype.respondWith = function respondWith(body, options) {\n        return new Response(body, assign(options || {}, { url: this.getUrl() }));\n    };\n\n    return Request;\n}();\n\n/**\n * Service for sending network requests.\n */\n\nvar CUSTOM_HEADERS = { 'X-Requested-With': 'XMLHttpRequest' };\nvar COMMON_HEADERS = { 'Accept': 'application/json, text/plain, */*' };\nvar JSON_CONTENT_TYPE = { 'Content-Type': 'application/json;charset=utf-8' };\n\nfunction Http(options) {\n\n    var self = this || {},\n        client = Client(self.$vm);\n\n    defaults(options || {}, self.$options, Http.options);\n\n    Http.interceptors.forEach(function (handler) {\n        client.use(handler);\n    });\n\n    return client(new Request(options)).then(function (response) {\n\n        return response.ok ? response : Promise$1.reject(response);\n    }, function (response) {\n\n        if (response instanceof Error) {\n            error(response);\n        }\n\n        return Promise$1.reject(response);\n    });\n}\n\nHttp.options = {};\n\nHttp.headers = {\n    put: JSON_CONTENT_TYPE,\n    post: JSON_CONTENT_TYPE,\n    patch: JSON_CONTENT_TYPE,\n    delete: JSON_CONTENT_TYPE,\n    custom: CUSTOM_HEADERS,\n    common: COMMON_HEADERS\n};\n\nHttp.interceptors = [before, timeout, method, body, jsonp, header, cors];\n\n['get', 'delete', 'head', 'jsonp'].forEach(function (method) {\n\n    Http[method] = function (url, options) {\n        return this(assign(options || {}, { url: url, method: method }));\n    };\n});\n\n['post', 'put', 'patch'].forEach(function (method) {\n\n    Http[method] = function (url, body, options) {\n        return this(assign(options || {}, { url: url, method: method, body: body }));\n    };\n});\n\nfunction Resource(url, params, actions, options) {\n\n    var self = this || {},\n        resource = {};\n\n    actions = assign({}, Resource.actions, actions);\n\n    each(actions, function (action, name) {\n\n        action = merge({ url: url, params: params || {} }, options, action);\n\n        resource[name] = function () {\n            return (self.$http || Http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options = assign({}, action),\n        params = {},\n        body;\n\n    switch (args.length) {\n\n        case 2:\n\n            params = args[0];\n            body = args[1];\n\n            break;\n\n        case 1:\n\n            if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n                body = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 4 arguments [params, body], got ' + args.length + ' arguments';\n    }\n\n    options.body = body;\n    options.params = assign({}, options.params, params);\n\n    return options;\n}\n\nResource.actions = {\n\n    get: { method: 'GET' },\n    save: { method: 'POST' },\n    query: { method: 'GET' },\n    update: { method: 'PUT' },\n    remove: { method: 'DELETE' },\n    delete: { method: 'DELETE' }\n\n};\n\nfunction plugin(Vue) {\n\n    if (plugin.installed) {\n        return;\n    }\n\n    Util(Vue);\n\n    Vue.url = Url;\n    Vue.http = Http;\n    Vue.resource = Resource;\n    Vue.Promise = Promise$1;\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function () {\n                return options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function () {\n                return options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function () {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function () {\n                var _this = this;\n\n                return function (executor) {\n                    return new Vue.Promise(executor, _this);\n                };\n            }\n        }\n\n    });\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(plugin);\n}\n\nmodule.exports = plugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/dist/vue-resource.common.js\n ** module id = 29\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.26\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && UA.indexOf('trident') > 0;\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\nvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\n// detecting iOS UIWebView by indexedDB\nvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    if (this.size === this.limit) {\n      removed = this.shift();\n    }\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  if (!node) return false;\n  var doc = node.ownerDocument.documentElement;\n  var parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        // Firefox returns unknown for some \"Interactive elements.\"\n        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n      parent = mergeOptions(parent, mixinOptions, vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tiosVersionMatch: iosVersionMatch,\n\tiosVersion: iosVersion,\n\thasMutationObserverBug: hasMutationObserverBug,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\nfunction noop() {}\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here because the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if (e.toString().match(/unsafe-eval|CSP/)) {\n        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n      } else {\n        warn('Invalid expression. ' + 'Generated function body: ' + body);\n      }\n    }\n    return noop;\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat literal values as paths\n  !literalValueRE$1.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n\n    runBatcherQueue(queue);\n    runBatcherQueue(userQueue);\n    // user watchers triggered more watchers,\n    // keep flushing until it depletes\n    if (queue.length) {\n      _again = true;\n      continue _function;\n    }\n    // dev tool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n    resetBatcherState();\n  }\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n  queue.length = 0;\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if ((isA || isO) && Object.isExtensible(val)) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\nvar commentRE = /<!--/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n  var commentMatch = commentRE.test(templateString);\n\n  if (!tagMatch && !entityMatch && !commentMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * watcher's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    // #3029 only update when the value changes. This prevent\n    // browsers from overwriting values like selectionStart\n    value = _toString(value);\n    if (value !== this.el.value) this.el.value = value;\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var _this = this;\n\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', function () {\n      nextTick(_this.forceUpdate);\n    });\n    if (!inDoc(el)) {\n      nextTick(this.forceUpdate);\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value, vm);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value, vm) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  if (typeof coerce === 'function') {\n    return coerce(value);\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n    return value;\n  }\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    oldId = oldId || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    removeClass(el, oldId + '-transition');\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = _toString(value);\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node, true);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop$1() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop$1;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    var length = args.length;\n    if (length > 1) {\n      var index = value % 10 - 1;\n      return index in args ? args[index] : args[length - 1];\n    } else {\n      return args[0] + (value === 1 ? '' : 's');\n    }\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          if (!definition.name) {\n            definition.name = id;\n          }\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.26';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 30\n ** module chunks = 0\n **/","/*!\n * Vuex v1.0.0-rc.2\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Vuex = factory());\n}(this, function () { 'use strict';\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n  };\n\n  var classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var toConsumableArray = function (arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  };\n\n  /**\n   * Merge an array of objects into one.\n   *\n   * @param {Array<Object>} arr\n   * @return {Object}\n   */\n\n  function mergeObjects(arr) {\n    return arr.reduce(function (prev, obj) {\n      Object.keys(obj).forEach(function (key) {\n        var existing = prev[key];\n        if (existing) {\n          // allow multiple mutation objects to contain duplicate\n          // handlers for the same mutation type\n          if (Array.isArray(existing)) {\n            prev[key] = existing.concat(obj[key]);\n          } else {\n            prev[key] = [existing].concat(obj[key]);\n          }\n        } else {\n          prev[key] = obj[key];\n        }\n      });\n      return prev;\n    }, {});\n  }\n\n  /**\n   * Check whether the given value is Object or not\n   *\n   * @param {*} obj\n   * @return {Boolean}\n   */\n\n  function isObject(obj) {\n    return obj !== null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n  }\n\n  /**\n   * Get state sub tree by given keys.\n   *\n   * @param {Object} state\n   * @param {Array<String>} nestedKeys\n   * @return {Object}\n   */\n  function getNestedState(state, nestedKeys) {\n    return nestedKeys.reduce(function (state, key) {\n      return state[key];\n    }, state);\n  }\n\n  /**\n   * Hacks to get access to Vue internals.\n   * Maybe we should expose these...\n   */\n\n  var Watcher = void 0;\n  function getWatcher(vm) {\n    if (!Watcher) {\n      var noop = function noop() {};\n      var unwatch = vm.$watch(noop, noop);\n      Watcher = vm._watchers[0].constructor;\n      unwatch();\n    }\n    return Watcher;\n  }\n\n  var Dep = void 0;\n  function getDep(vm) {\n    if (!Dep) {\n      Dep = vm._data.__ob__.dep.constructor;\n    }\n    return Dep;\n  }\n\n  var hook = typeof window !== 'undefined' && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n  function devtoolPlugin(store) {\n    if (!hook) return;\n\n    hook.emit('vuex:init', store);\n\n    hook.on('vuex:travel-to-state', function (targetState) {\n      store.replaceState(targetState);\n    });\n\n    store.subscribe(function (mutation, state) {\n      hook.emit('vuex:mutation', mutation, state);\n    });\n  }\n\n  function override (Vue) {\n    var version = Number(Vue.version.split('.')[0]);\n\n    if (version >= 2) {\n      var usesInit = Vue.config._lifecycleHooks.indexOf('init') > -1;\n      Vue.mixin(usesInit ? { init: vuexInit } : { beforeCreate: vuexInit });\n    } else {\n      (function () {\n        // override init and inject vuex init procedure\n        // for 1.x backwards compatibility.\n        var _init = Vue.prototype._init;\n        Vue.prototype._init = function () {\n          var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n          options.init = options.init ? [vuexInit].concat(options.init) : vuexInit;\n          _init.call(this, options);\n        };\n      })();\n    }\n\n    /**\n     * Vuex init hook, injected into each instances init hooks list.\n     */\n\n    function vuexInit() {\n      var options = this.$options;\n      var store = options.store;\n      var vuex = options.vuex;\n      // store injection\n\n      if (store) {\n        this.$store = store;\n      } else if (options.parent && options.parent.$store) {\n        this.$store = options.parent.$store;\n      }\n      // vuex option handling\n      if (vuex) {\n        if (!this.$store) {\n          console.warn('[vuex] store not injected. make sure to ' + 'provide the store option in your root component.');\n        }\n        var state = vuex.state;\n        var actions = vuex.actions;\n        var getters = vuex.getters;\n        // handle deprecated state option\n\n        if (state && !getters) {\n          console.warn('[vuex] vuex.state option will been deprecated in 1.0. ' + 'Use vuex.getters instead.');\n          getters = state;\n        }\n        // getters\n        if (getters) {\n          options.computed = options.computed || {};\n          for (var key in getters) {\n            defineVuexGetter(this, key, getters[key]);\n          }\n        }\n        // actions\n        if (actions) {\n          options.methods = options.methods || {};\n          for (var _key in actions) {\n            options.methods[_key] = makeBoundAction(this.$store, actions[_key], _key);\n          }\n        }\n      }\n    }\n\n    /**\n     * Setter for all getter properties.\n     */\n\n    function setter() {\n      throw new Error('vuex getter properties are read-only.');\n    }\n\n    /**\n     * Define a Vuex getter on an instance.\n     *\n     * @param {Vue} vm\n     * @param {String} key\n     * @param {Function} getter\n     */\n\n    function defineVuexGetter(vm, key, getter) {\n      if (typeof getter !== 'function') {\n        console.warn('[vuex] Getter bound to key \\'vuex.getters.' + key + '\\' is not a function.');\n      } else {\n        Object.defineProperty(vm, key, {\n          enumerable: true,\n          configurable: true,\n          get: makeComputedGetter(vm.$store, getter),\n          set: setter\n        });\n      }\n    }\n\n    /**\n     * Make a computed getter, using the same caching mechanism of computed\n     * properties. In addition, it is cached on the raw getter function using\n     * the store's unique cache id. This makes the same getter shared\n     * across all components use the same underlying watcher, and makes\n     * the getter evaluated only once during every flush.\n     *\n     * @param {Store} store\n     * @param {Function} getter\n     */\n\n    function makeComputedGetter(store, getter) {\n      var id = store._getterCacheId;\n\n      // cached\n      if (getter[id]) {\n        return getter[id];\n      }\n      var vm = store._vm;\n      var Watcher = getWatcher(vm);\n      var Dep = getDep(vm);\n      var watcher = new Watcher(vm, function (vm) {\n        return getter(vm.state);\n      }, null, { lazy: true });\n      var computedGetter = function computedGetter() {\n        if (watcher.dirty) {\n          watcher.evaluate();\n        }\n        if (Dep.target) {\n          watcher.depend();\n        }\n        return watcher.value;\n      };\n      getter[id] = computedGetter;\n      return computedGetter;\n    }\n\n    /**\n     * Make a bound-to-store version of a raw action function.\n     *\n     * @param {Store} store\n     * @param {Function} action\n     * @param {String} key\n     */\n\n    function makeBoundAction(store, action, key) {\n      if (typeof action !== 'function') {\n        console.warn('[vuex] Action bound to key \\'vuex.actions.' + key + '\\' is not a function.');\n      }\n      return function vuexBoundAction() {\n        for (var _len = arguments.length, args = Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        return action.call.apply(action, [this, store].concat(args));\n      };\n    }\n\n    // option merging\n    var merge = Vue.config.optionMergeStrategies.computed;\n    Vue.config.optionMergeStrategies.vuex = function (toVal, fromVal) {\n      if (!toVal) return fromVal;\n      if (!fromVal) return toVal;\n      return {\n        getters: merge(toVal.getters, fromVal.getters),\n        state: merge(toVal.state, fromVal.state),\n        actions: merge(toVal.actions, fromVal.actions)\n      };\n    };\n  }\n\n  var Vue = void 0;\n  var uid = 0;\n\n  var Store = function () {\n\n    /**\n     * @param {Object} options\n     *        - {Object} state\n     *        - {Object} actions\n     *        - {Object} mutations\n     *        - {Array} plugins\n     *        - {Boolean} strict\n     */\n\n    function Store() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$state = _ref.state;\n      var state = _ref$state === undefined ? {} : _ref$state;\n      var _ref$mutations = _ref.mutations;\n      var mutations = _ref$mutations === undefined ? {} : _ref$mutations;\n      var _ref$modules = _ref.modules;\n      var modules = _ref$modules === undefined ? {} : _ref$modules;\n      var _ref$plugins = _ref.plugins;\n      var plugins = _ref$plugins === undefined ? [] : _ref$plugins;\n      var _ref$strict = _ref.strict;\n      var strict = _ref$strict === undefined ? false : _ref$strict;\n      classCallCheck(this, Store);\n\n      this._getterCacheId = 'vuex_store_' + uid++;\n      this._dispatching = false;\n      this._rootMutations = this._mutations = mutations;\n      this._modules = modules;\n      this._subscribers = [];\n      // bind dispatch to self\n      var dispatch = this.dispatch;\n      this.dispatch = function () {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        dispatch.apply(_this, args);\n      };\n      // use a Vue instance to store the state tree\n      // suppress warnings just in case the user has added\n      // some funky global mixins\n      if (!Vue) {\n        throw new Error('[vuex] must call Vue.use(Vuex) before creating a store instance.');\n      }\n      var silent = Vue.config.silent;\n      Vue.config.silent = true;\n      this._vm = new Vue({\n        data: {\n          state: state\n        }\n      });\n      Vue.config.silent = silent;\n      this._setupModuleState(state, modules);\n      this._setupModuleMutations(modules);\n      // add extra warnings in strict mode\n      if (strict) {\n        this._setupMutationCheck();\n      }\n      // apply plugins\n      devtoolPlugin(this);\n      plugins.forEach(function (plugin) {\n        return plugin(_this);\n      });\n    }\n\n    /**\n     * Getter for the entire state tree.\n     * Read only.\n     *\n     * @return {Object}\n     */\n\n    createClass(Store, [{\n      key: 'replaceState',\n\n\n      /**\n       * Replace root state.\n       *\n       * @param {Object} state\n       */\n\n      value: function replaceState(state) {\n        this._dispatching = true;\n        this._vm.state = state;\n        this._dispatching = false;\n      }\n\n      /**\n       * Dispatch an action.\n       *\n       * @param {String} type\n       */\n\n    }, {\n      key: 'dispatch',\n      value: function dispatch(type) {\n        var _this2 = this;\n\n        for (var _len2 = arguments.length, payload = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          payload[_key2 - 1] = arguments[_key2];\n        }\n\n        var silent = false;\n        var isObjectStyleDispatch = false;\n        // compatibility for object actions, e.g. FSA\n        if ((typeof type === 'undefined' ? 'undefined' : _typeof(type)) === 'object' && type.type && arguments.length === 1) {\n          isObjectStyleDispatch = true;\n          payload = type;\n          if (type.silent) silent = true;\n          type = type.type;\n        }\n        var handler = this._mutations[type];\n        var state = this.state;\n        if (handler) {\n          this._dispatching = true;\n          // apply the mutation\n          if (Array.isArray(handler)) {\n            handler.forEach(function (h) {\n              isObjectStyleDispatch ? h(state, payload) : h.apply(undefined, [state].concat(toConsumableArray(payload)));\n            });\n          } else {\n            isObjectStyleDispatch ? handler(state, payload) : handler.apply(undefined, [state].concat(toConsumableArray(payload)));\n          }\n          this._dispatching = false;\n          if (!silent) {\n            (function () {\n              var mutation = isObjectStyleDispatch ? payload : { type: type, payload: payload };\n              _this2._subscribers.forEach(function (sub) {\n                return sub(mutation, state);\n              });\n            })();\n          }\n        } else {\n          console.warn('[vuex] Unknown mutation: ' + type);\n        }\n      }\n\n      /**\n       * Watch state changes on the store.\n       * Same API as Vue's $watch, except when watching a function,\n       * the function gets the state as the first argument.\n       *\n       * @param {Function} fn\n       * @param {Function} cb\n       * @param {Object} [options]\n       */\n\n    }, {\n      key: 'watch',\n      value: function watch(fn, cb, options) {\n        var _this3 = this;\n\n        if (typeof fn !== 'function') {\n          console.error('Vuex store.watch only accepts function.');\n          return;\n        }\n        return this._vm.$watch(function () {\n          return fn(_this3.state);\n        }, cb, options);\n      }\n\n      /**\n       * Subscribe to state changes. Fires after every mutation.\n       */\n\n    }, {\n      key: 'subscribe',\n      value: function subscribe(fn) {\n        var subs = this._subscribers;\n        if (subs.indexOf(fn) < 0) {\n          subs.push(fn);\n        }\n        return function () {\n          var i = subs.indexOf(fn);\n          if (i > -1) {\n            subs.splice(i, 1);\n          }\n        };\n      }\n\n      /**\n       * Hot update mutations & modules.\n       *\n       * @param {Object} options\n       *        - {Object} [mutations]\n       *        - {Object} [modules]\n       */\n\n    }, {\n      key: 'hotUpdate',\n      value: function hotUpdate() {\n        var _ref2 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n        var mutations = _ref2.mutations;\n        var modules = _ref2.modules;\n\n        this._rootMutations = this._mutations = mutations || this._rootMutations;\n        this._setupModuleMutations(modules || this._modules);\n      }\n\n      /**\n       * Attach sub state tree of each module to the root tree.\n       *\n       * @param {Object} state\n       * @param {Object} modules\n       */\n\n    }, {\n      key: '_setupModuleState',\n      value: function _setupModuleState(state, modules) {\n        var _this4 = this;\n\n        if (!isObject(modules)) return;\n\n        Object.keys(modules).forEach(function (key) {\n          var module = modules[key];\n\n          // set this module's state\n          Vue.set(state, key, module.state || {});\n\n          // retrieve nested modules\n          _this4._setupModuleState(state[key], module.modules);\n        });\n      }\n\n      /**\n       * Bind mutations for each module to its sub tree and\n       * merge them all into one final mutations map.\n       *\n       * @param {Object} updatedModules\n       */\n\n    }, {\n      key: '_setupModuleMutations',\n      value: function _setupModuleMutations(updatedModules) {\n        var modules = this._modules;\n        Object.keys(updatedModules).forEach(function (key) {\n          modules[key] = updatedModules[key];\n        });\n        var updatedMutations = this._createModuleMutations(modules, []);\n        this._mutations = mergeObjects([this._rootMutations].concat(toConsumableArray(updatedMutations)));\n      }\n\n      /**\n       * Helper method for _setupModuleMutations.\n       * The method retrieve nested sub modules and\n       * bind each mutations to its sub tree recursively.\n       *\n       * @param {Object} modules\n       * @param {Array<String>} nestedKeys\n       * @return {Array<Object>}\n       */\n\n    }, {\n      key: '_createModuleMutations',\n      value: function _createModuleMutations(modules, nestedKeys) {\n        var _this5 = this;\n\n        if (!isObject(modules)) return [];\n\n        return Object.keys(modules).map(function (key) {\n          var module = modules[key];\n          var newNestedKeys = nestedKeys.concat(key);\n\n          // retrieve nested modules\n          var nestedMutations = _this5._createModuleMutations(module.modules, newNestedKeys);\n\n          if (!module || !module.mutations) {\n            return mergeObjects(nestedMutations);\n          }\n\n          // bind mutations to sub state tree\n          var mutations = {};\n          Object.keys(module.mutations).forEach(function (name) {\n            var original = module.mutations[name];\n            mutations[name] = function (state) {\n              for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n                args[_key3 - 1] = arguments[_key3];\n              }\n\n              original.apply(undefined, [getNestedState(state, newNestedKeys)].concat(args));\n            };\n          });\n\n          // merge mutations of this module and nested modules\n          return mergeObjects([mutations].concat(toConsumableArray(nestedMutations)));\n        });\n      }\n\n      /**\n       * Setup mutation check: if the vuex instance's state is mutated\n       * outside of a mutation handler, we throw en error. This effectively\n       * enforces all mutations to the state to be trackable and hot-reloadble.\n       * However, this comes at a run time cost since we are doing a deep\n       * watch on the entire state tree, so it is only enalbed with the\n       * strict option is set to true.\n       */\n\n    }, {\n      key: '_setupMutationCheck',\n      value: function _setupMutationCheck() {\n        var _this6 = this;\n\n        var Watcher = getWatcher(this._vm);\n        /* eslint-disable no-new */\n        new Watcher(this._vm, 'state', function () {\n          if (!_this6._dispatching) {\n            throw new Error('[vuex] Do not mutate vuex store state outside mutation handlers.');\n          }\n        }, { deep: true, sync: true });\n        /* eslint-enable no-new */\n      }\n    }, {\n      key: 'state',\n      get: function get() {\n        return this._vm.state;\n      },\n      set: function set(v) {\n        throw new Error('[vuex] Use store.replaceState() to explicit replace store state.');\n      }\n    }]);\n    return Store;\n  }();\n\n  function install(_Vue) {\n    if (Vue) {\n      console.warn('[vuex] already installed. Vue.use(Vuex) should be called only once.');\n      return;\n    }\n    Vue = _Vue;\n    override(Vue);\n  }\n\n  // auto install in dist mode\n  if (typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n  }\n\n  var index = {\n    Store: Store,\n    install: install\n  };\n\n  return index;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vuex/dist/vuex.js\n ** module id = 31\n ** module chunks = 0\n **/"],"sourceRoot":""}